<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>vue</title>
      <link href="/2019/03/28/vue/"/>
      <url>/2019/03/28/vue/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> vue.js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue.js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>swift基础知识</title>
      <link href="/2018/09/25/swift%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
      <url>/2018/09/25/swift%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>fastlane+蒲公英自动化打包</title>
      <link href="/2018/09/14/fastlane-%E8%92%B2%E5%85%AC%E8%8B%B1%E8%87%AA%E5%8A%A8%E5%8C%96%E6%89%93%E5%8C%85/"/>
      <url>/2018/09/14/fastlane-%E8%92%B2%E5%85%AC%E8%8B%B1%E8%87%AA%E5%8A%A8%E5%8C%96%E6%89%93%E5%8C%85/</url>
      
        <content type="html"><![CDATA[<blockquote><p>人类似乎有这样的倾向，建立一项规则叫别人遵守，同时又极力使自己成为例外，不受它的约束。&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;——卢梭《忏悔录》</p></blockquote><hr><p>本文参考<a href="https://blog.csdn.net/kuangdacaikuang/article/details/80443515" target="_blank" rel="noopener">自动化打包之fastlane</a> 作者写的特别详细，之前自己装这个，执行到安装蒲公英插件，总是报下面的错误</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">An error occurred while installing unf_ext (0.0.7.5), and Bundler</span><br><span class="line">cannot continue.</span><br><span class="line">Make sure that `gem install unf_ext -v &apos;0.0.7.5&apos;` succeeds before bundling.</span><br></pre></td></tr></table></figure><p>后来看到这篇博客，一次性成功，中间没遇到什么很难解决的问题，直到最后打包成功。很丝滑很流畅。再次感谢。</p><a id="more"></a><h2 id="1、安装rvm"><a href="#1、安装rvm" class="headerlink" title="1、安装rvm"></a>1、安装rvm</h2><p>RVM 是一个命令行工具,可以提供一个便捷的多版本 Ruby 环境的管理和切换。</p><p>执行命令<code>rvm -v</code>，查看是否已经安装了rvm</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ rvm -v</span><br><span class="line">-bash: rvm: command not found</span><br></pre></td></tr></table></figure><p>执行命令安装rvm：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ curl -L https://get.rvm.io | bash -s stable</span><br><span class="line">$ source ~/.bashrc</span><br><span class="line">$ source ~/.bash_profile</span><br></pre></td></tr></table></figure><p>再次执行命令<code>rvm -v</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ rvm -v</span><br><span class="line">rvm 1.29.4 (latest) by Michal Papis, Piotr Kuczynski, Wayne E. Seguin [https://rvm.io]</span><br></pre></td></tr></table></figure><p>mac自带ruby，也可以自己安装，使用rvm查看ruby的版本</p><p>执行命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">$ rvm list known</span><br><span class="line"></span><br><span class="line"># MRI Rubies</span><br><span class="line">[ruby-]1.8.6[-p420]</span><br><span class="line">[ruby-]1.8.7[-head] # security released on head</span><br><span class="line">[ruby-]1.9.1[-p431]</span><br><span class="line">[ruby-]1.9.2[-p330]</span><br><span class="line">[ruby-]1.9.3[-p551]</span><br><span class="line">[ruby-]2.0.0[-p648]</span><br><span class="line">[ruby-]2.1[.10]</span><br><span class="line">[ruby-]2.2[.10]</span><br><span class="line">[ruby-]2.3[.7]</span><br><span class="line">[ruby-]2.4[.4]</span><br><span class="line">[ruby-]2.5[.1]</span><br><span class="line">[ruby-]2.6[.0-preview2]</span><br><span class="line">ruby-head</span><br><span class="line"></span><br><span class="line"># for forks use: rvm install ruby-head-&lt;name&gt; --url https://github.com/github/ruby.git --branch 2.2</span><br><span class="line">.</span><br><span class="line">.省略好多行</span><br><span class="line">.</span><br></pre></td></tr></table></figure><h2 id="2、brew"><a href="#2、brew" class="headerlink" title="2、brew"></a>2、brew</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ brew update          # 更新 Homebrew 的信息</span><br><span class="line">$ brew outdated        # 看一下哪些软件可以升级</span><br><span class="line">$ brew upgrade &lt;xxx&gt;   # 如果不是所有的都要升级，那就这样升级指定的</span><br><span class="line"></span><br><span class="line">$ brew upgrade; #全部升级</span><br><span class="line">$ brew cleanup    # 如果都要升级，直接升级完然后清理干净</span><br></pre></td></tr></table></figure><p>执行命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$ brew update</span><br><span class="line"></span><br><span class="line">fatal: unable to access &apos;https://github.com/Homebrew/homebrew-cask/&apos;: LibreSSL SSL_read: SSL_ERROR_SYSCALL, errno 54</span><br><span class="line">Error: Fetching /usr/local/Homebrew/Library/Taps/homebrew/homebrew-cask failed!</span><br><span class="line">Updated 1 tap (homebrew/core).</span><br><span class="line">==&gt; New Formulae</span><br><span class="line">picat</span><br><span class="line">==&gt; Updated Formulae</span><br><span class="line">bat                        glm                        rust</span><br><span class="line">erlang                     libiscsi                   stlink</span><br><span class="line">freexl                     opensc                     swift-protobuf</span><br><span class="line">git-cola                   php@7.1                    webpack</span><br><span class="line">git-credential-manager     root</span><br></pre></td></tr></table></figure><p>报错，别慌，可能是网络问题，多执行几遍就好了，我执行了两次输出以下结果</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Updated 1 tap (homebrew/cask).</span><br><span class="line">No changes to formulae.</span><br></pre></td></tr></table></figure><p>执行命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ brew outdated</span><br><span class="line"></span><br><span class="line">ack (2.14) &lt; 2.24</span><br><span class="line">automake (1.15, 1.15.1) &lt; 1.16.1_1</span><br><span class="line">go (1.9.2) &lt; 1.11</span><br><span class="line">libgpg-error (1.24, 1.27) &lt; 1.32</span><br><span class="line">libyaml (0.1.6_1, 0.1.7) &lt; 0.2.1</span><br><span class="line">openssl (1.0.2h_1, 1.0.2n) &lt; 1.0.2p</span><br><span class="line">readline (6.3.8, 7.0.3_1) &lt; 7.0.5</span><br></pre></td></tr></table></figure><p>执行命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ brew upgrade</span><br><span class="line"></span><br><span class="line">Error: The following directories are not writable by your user:</span><br><span class="line">/usr/local/share/man/man3</span><br><span class="line">/usr/local/share/man/man5</span><br><span class="line">/usr/local/share/man/man7</span><br><span class="line"></span><br><span class="line">You should change the ownership of these directories to your user.</span><br><span class="line">  sudo chown -R $(whoami) /usr/local/share/man/man3 /usr/local/share/man/man5 /usr/local/share/man/man7</span><br></pre></td></tr></table></figure><p>报错了，按照提示，执行命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo chown -R $(whoami) /usr/local/share/man/man3 /usr/local/share/man/man5 /usr/local/share/man/man7</span><br></pre></td></tr></table></figure><h2 id="3、bundler"><a href="#3、bundler" class="headerlink" title="3、bundler"></a>3、bundler</h2><p>执行命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ gem install bundler</span><br><span class="line"></span><br><span class="line">Fetching: bundler-1.16.4.gem (100%)</span><br><span class="line">ERROR:  While executing gem ... (Errno::EACCES)</span><br><span class="line">    Permission denied @ rb_sysopen - /Library/Ruby/Gems/2.3.0/cache/bundler-1.16.4.gem</span><br></pre></td></tr></table></figure><p>没有权限，执行命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo gem install bundler</span><br></pre></td></tr></table></figure><p>输入密码，完成安装。</p><h2 id="4、fastlane"><a href="#4、fastlane" class="headerlink" title="4、fastlane"></a>4、fastlane</h2><p>执行命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ xcode-select --install</span><br></pre></td></tr></table></figure><p>会弹出一个弹窗，安装即可。</p><p>执行命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo gem install fastlane --verbose</span><br></pre></td></tr></table></figure><h2 id="5、match"><a href="#5、match" class="headerlink" title="5、match"></a>5、match</h2><p>执行命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo gem install match</span><br></pre></td></tr></table></figure><p>安装成功以后会提示使用fastlane match代替match</p><h2 id="6、deliver"><a href="#6、deliver" class="headerlink" title="6、deliver"></a>6、deliver</h2><p>上传屏幕截图,元数据,和APP到AppStore</p><p>执行命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo gem install deliver</span><br></pre></td></tr></table></figure><p>安装成功以后会提示使用fastlane deliver代替deliver</p><h2 id="7、初始化fastlane"><a href="#7、初始化fastlane" class="headerlink" title="7、初始化fastlane"></a>7、初始化fastlane</h2><p><strong>a：</strong>打开项目，导航栏-&gt;product-&gt;scheme-&gt;manage schemes…选择你的项目，勾选shared</p><p><strong>b：</strong>在终端中，cd到你的项目目录，执行命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">$ fastlane init</span><br><span class="line"></span><br><span class="line">[11:37:59]: Created new folder &apos;./fastlane&apos;.</span><br><span class="line">[11:37:59]: Detected an iOS/macOS project in the current directory: &apos;wasaiSports.xcworkspace&apos;</span><br><span class="line">[11:37:59]: -----------------------------</span><br><span class="line">[11:37:59]: --- Welcome to fastlane 🚀 ---</span><br><span class="line">[11:37:59]: -----------------------------</span><br><span class="line">[11:37:59]: fastlane can help you with all kinds of automation for your mobile app</span><br><span class="line">[11:37:59]: We recommend automating one task first, and then gradually automating more over time</span><br><span class="line">[11:37:59]: What would you like to use fastlane for?</span><br><span class="line">1. 📸  Automate screenshots</span><br><span class="line">2. 👩‍✈️  Automate beta distribution to TestFlight</span><br><span class="line">3. 🚀  Automate App Store distribution</span><br><span class="line">4. 🛠  Manual setup - manually setup your project to automate your tasks</span><br><span class="line">?  3</span><br></pre></td></tr></table></figure><p>有4个选项，先选3，上传到App Store</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">.省略很多</span><br><span class="line">.</span><br><span class="line">[11:38:17]: - Manage your App Store Connect app metadata and screenshots</span><br><span class="line">[11:38:17]: </span><br><span class="line">[11:38:17]: Your Apple ID credentials will only be stored in your Keychain, on your local machine</span><br><span class="line">[11:38:17]: For more information, check out</span><br><span class="line">[11:38:17]: https://github.com/fastlane/fastlane/tree/master/credentials_manager</span><br><span class="line">[11:38:17]: </span><br><span class="line">[11:38:17]: Please enter your Apple ID developer credentials</span><br><span class="line">[11:38:17]: Apple ID Username:</span><br></pre></td></tr></table></figure><p>输入你的开发者账号邮箱，如果有多个team的话，选择自己的team序号，然后</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[11:39:11]: This way, you&apos;ll be able to edit your app&apos;s metadata in local `.txt` files.</span><br><span class="line">[11:39:11]: After editing the local `.txt` files, just run fastlane and all changes will be pushed up.</span><br><span class="line">[11:39:11]: If you don&apos;t want to use this feature, you can still use fastlane to upload and distribute new builds to the App Store</span><br><span class="line">[11:39:11]: Would you like fastlane to manage your app&apos;s metadata? (y/n)</span><br><span class="line">y</span><br></pre></td></tr></table></figure><p>是否允许fastlane管理app的数据信息，输入y，我分别在两台电脑上走到这个过程遇到了两种不同的情况：</p><p>◆ 第一次直接成功了，但是在项目文件目录下没有生成<code>Gemfile.lock</code>文件，其他都有，然后我就斗胆执行了命令<code>$ bundle update</code>，执行成功后就有了<code>Gemfile.lock</code>这个文件。</p><p>◆ 第二次卡在了<code>$ bundle update</code>这一行，这个不是我手动输入的命令，而是上面输入y之后输出的，然后我又斗胆终止了，按<code>ctrl + c</code>还终止不了，重新打开一个窗口，cd到项目目录，执行命令<code>$ bundle update</code>，很快的就成功了。</p><p>以上是我遇到的两种情况，到此为止，<code>fastlane init</code>就成功了，此时你的项目目录下会出现<code>fastlane文件夹</code>、<code>Gemfiel</code>、<code>Gemfile.lock</code>这三项。</p><h2 id="8、插件"><a href="#8、插件" class="headerlink" title="8、插件"></a>8、插件</h2><p>☞ 安装蒲公英pgyer插件 ☜，当然有很多插件可以选择，本篇以蒲公英为例，执行命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ bundle exec fastlane add_plugin pgyer</span><br></pre></td></tr></table></figure><p>☞ 安装版本控制versioning插件 ☜，执行命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ bundle exec fastlane add_plugin versioning</span><br></pre></td></tr></table></figure><p>还有很多插件，可以参考<a href="https://docs.fastlane.tools/plugins/available-plugins/" target="_blank" rel="noopener">fastlane官方文档可以找到的插件</a></p><h2 id="9、打包"><a href="#9、打包" class="headerlink" title="9、打包"></a>9、打包</h2><p>在Fastfile中增加上传到蒲公英的lane</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">lane :beta do</span><br><span class="line">  build_app(export_method: &quot;ad-hoc&quot;)</span><br><span class="line">  pgyer(api_key: &quot;******&quot;, user_key: &quot;******&quot;)</span><br><span class="line">  end</span><br></pre></td></tr></table></figure><p>其中api_key和user_key的获取方法：登录你的蒲公英账号（提前先上传一个版本），在应用概述里面找到这两个值。</p><p>执行命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ fastlane beta</span><br></pre></td></tr></table></figure><p>成功后，如果你的蒲公英绑定了微信或手机，就会收到相应的信息通知。</p><h2 id="10、后续问题"><a href="#10、后续问题" class="headerlink" title="10、后续问题"></a>10、后续问题</h2><p>如果pod不能用了，cd到项目目录，执行下列命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ mkdir -p $HOME/Software/ruby</span><br><span class="line"></span><br><span class="line">$ export GEM_HOME=$HOME/Software/ruby</span><br><span class="line"></span><br><span class="line">$ gem install cocoapods</span><br><span class="line"></span><br><span class="line">$ export PATH=$PATH:$HOME/Software/ruby/bin</span><br><span class="line"></span><br><span class="line">$ pod --version</span><br></pre></td></tr></table></figure><hr><p><em>到此结束，一把辛酸泪，好记性不如烂笔头。</em></p>]]></content>
      
      
      <categories>
          
          <category> 自动化打包 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> fastlane自动化打包 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mac下搭建hyperledger Fabric环境</title>
      <link href="/2018/09/06/Fabric%E7%8E%AF%E5%A2%83/"/>
      <url>/2018/09/06/Fabric%E7%8E%AF%E5%A2%83/</url>
      
        <content type="html"><![CDATA[<blockquote><p>童年，我们总以为什么都不懂；少年，我们总以为自己什么都懂；青年，我们又以为什么都不懂；中年，我们又以为什么都懂；老年，其实我们什么都不懂。此人生五境界论，揭示了人生的秘密：我们在生活面前，永远都是无知的孩子。</p></blockquote><hr><p>ubuntu参考<a href="https://blog.csdn.net/so5418418/article/details/78355868/" target="_blank" rel="noopener">区块链之Hyperledger（超级账本）Fabric v1.0 的环境搭建（超详细教程）</a></p><p>本人是mac OS 系统，参考<a href="https://www.jianshu.com/p/e108cf655c0f" target="_blank" rel="noopener">Mac下Hyperledger Fabric(超级账本)环境搭建</a>,这篇文章作者已经写的很详细了，但是在操作过程中我还是遇到了困难，搞了很久，最后在朋友的帮助下得以解决，所以在此记录下来，以方便遇到同样问题的朋友参考。</p><a id="more"></a><h3 id="1、前提条件"><a href="#1、前提条件" class="headerlink" title="1、前提条件"></a>1、前提条件</h3><h5 id="1-1-安装-Go"><a href="#1-1-安装-Go" class="headerlink" title="1.1 安装 Go"></a>1.1 安装 Go</h5><p>Mac 可以直接通过 <code>homebrew</code> 安装 go 环境</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install go</span><br></pre></td></tr></table></figure><p>或者通过官网下载安装包<a href="https://golang.org/dl/" target="_blank" rel="noopener">传送门</a></p><p>安装完成后检测是否安装成功</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ go version</span><br><span class="line">go version go1.11 darwin/amd64</span><br></pre></td></tr></table></figure><h5 id="1-2-配置环境变量"><a href="#1-2-配置环境变量" class="headerlink" title="1.2 配置环境变量"></a>1.2 配置环境变量</h5><p><strong>a:</strong> 新建一个go的文件夹，路径放在$HOME下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ cd $HOME//进入 $HOME 目录下 </span><br><span class="line">$ mkdir go//新建 go 文件夹</span><br></pre></td></tr></table></figure><p><strong>b:</strong> 配置环境变量</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ cd $HOME//进入 $HOME 目录下 </span><br><span class="line">$ vi .bash_profile//编辑 .bash_profile 文件</span><br></pre></td></tr></table></figure><p>输入 <code>i</code> ,然后在文件末尾加上：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#GOPATH</span><br><span class="line">export GOPATH=$HOME/go</span><br><span class="line"></span><br><span class="line">#GOBIN</span><br><span class="line">export GOBIN=$GOPATH/bin</span><br><span class="line">export PATH=$PATH:$GOBIN</span><br></pre></td></tr></table></figure><p>按下 <code>esc</code> 键，输入 <code>:wq</code> 保存后退出，执行 <code>source</code> 命令，使之生效：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ source .bash_profile</span><br></pre></td></tr></table></figure><p><strong>c:</strong> 通过 <code>go env</code> 检查：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">$ go env</span><br><span class="line"></span><br><span class="line">#输出结果</span><br><span class="line">GOARCH=&quot;amd64&quot;</span><br><span class="line">GOBIN=&quot;/Users/wasai/go/bin&quot;</span><br><span class="line">GOCACHE=&quot;/Users/wasai/Library/Caches/go-build&quot;</span><br><span class="line">GOEXE=&quot;&quot;</span><br><span class="line">GOFLAGS=&quot;&quot;</span><br><span class="line">GOHOSTARCH=&quot;amd64&quot;</span><br><span class="line">GOHOSTOS=&quot;darwin&quot;</span><br><span class="line">GOOS=&quot;darwin&quot;</span><br><span class="line">GOPATH=&quot;/Users/wasai/go&quot;</span><br><span class="line">.</span><br><span class="line">.此处截取一部分，省略很多</span><br><span class="line">.</span><br></pre></td></tr></table></figure><h5 id="1-3-安装Docker并更新镜像源"><a href="#1-3-安装Docker并更新镜像源" class="headerlink" title="1.3 安装Docker并更新镜像源"></a>1.3 安装Docker并更新镜像源</h5><p><strong>a</strong> 安装Docker和docker-compose</p><p>在官网下载<a href="https://store.docker.com/editions/community/docker-ce-desktop-mac" target="_blank" rel="noopener">Docker CE for Mac</a>（需要注册dockerId才能下载），完成后安装。</p><p>安装后检查docker和docker-compose是否安装成功</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ docker --version</span><br><span class="line">Docker version 18.06.1-ce, build e68fc7a</span><br><span class="line">$ docker-compose --version</span><br><span class="line">docker-compose version 1.22.0, build f46880f</span><br></pre></td></tr></table></figure><p><strong>b</strong> 更新镜像源</p><p>打开刚刚安装的Docker软件，点击导航栏上的Docker图标-&gt;Preference-&gt;Daemon,在<code>Registry mirrors</code>中加入<code>https://aic2v8yz.mirror.aliyuncs.com</code></p><p>ps：这里使用上述参考文章作者的加速器,如果你自己有也可以用自己的加速器</p><p>完成之后，最后确保docker的状态是<code>Docker is running</code>并且在运行Hyperledger的时候，Docker的状态也是<code>Docker is running</code></p><h3 id="2、下载Hyperledger-Fabric项目源码"><a href="#2、下载Hyperledger-Fabric项目源码" class="headerlink" title="2、下载Hyperledger Fabric项目源码"></a>2、下载Hyperledger Fabric项目源码</h3><p>为 fabric 创建项目路径：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ cd $GOPATH</span><br><span class="line">$ mkdir -p src/github.com/hyperledger</span><br><span class="line">$ cd src/github.com/hyperledger</span><br><span class="line">$ pwd</span><br><span class="line">/Users/wasai/go/src/github.com/hyperledger</span><br></pre></td></tr></table></figure><p>从git上拉取<a href="https://github.com/hyperledger/fabric" target="_blank" rel="noopener">Hyperledger Fabric</a>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git clone git@github.com:hyperledger/fabric.git</span><br><span class="line">$ ls</span><br><span class="line">fabric</span><br></pre></td></tr></table></figure><p>进入项目文件夹，查看tag：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">$ cd fabric</span><br><span class="line">$ git tag</span><br><span class="line">baseimage-v0.0.11</span><br><span class="line">v0.6.0-preview</span><br><span class="line">v0.6.1-preview</span><br><span class="line">v1.0.0</span><br><span class="line">v1.0.0-alpha</span><br><span class="line">v1.0.0-alpha2</span><br><span class="line">v1.0.0-beta</span><br><span class="line">v1.0.0-rc1</span><br><span class="line">v1.0.1</span><br><span class="line">v1.0.2</span><br><span class="line">v1.0.3</span><br><span class="line">v1.0.4</span><br><span class="line">v1.0.5</span><br><span class="line">v1.0.6</span><br><span class="line">v1.1.0</span><br><span class="line">v1.1.0-alpha</span><br><span class="line">v1.1.0-preview</span><br><span class="line">v1.1.0-rc1</span><br><span class="line">v1.1.1</span><br><span class="line">v1.2.0</span><br><span class="line">v1.2.0-rc1</span><br></pre></td></tr></table></figure><p>选择使用v1.0.0</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ git checkout v1.0.0</span><br><span class="line">$ git branch</span><br><span class="line">* (HEAD detached at v1.0.0)</span><br><span class="line">  release-1.2</span><br></pre></td></tr></table></figure><h3 id="3、启动项目"><a href="#3、启动项目" class="headerlink" title="3、启动项目"></a>3、启动项目</h3><p>进入项目文件夹</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cd examples/e2e_cli</span><br></pre></td></tr></table></figure><p>执行download-dockerimages.sh，程序将会通过docker拉取项目所需镜像, 为了统一版本，请指定拉取镜像的版本号:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ chmod +x download-dockerimages.sh</span><br><span class="line">$ ./download-dockerimages.sh -c x86_64-1.0.0 -f x86_64-1.0.0</span><br></pre></td></tr></table></figure><p>镜像拉取完成：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">===&gt; List out hyperledger docker images</span><br><span class="line">hyperledger/fabric-tools       latest              0403fd1c72c7        14 months ago       1.32GB</span><br><span class="line">hyperledger/fabric-tools       x86_64-1.0.0        0403fd1c72c7        14 months ago       1.32GB</span><br><span class="line">hyperledger/fabric-couchdb     latest              2fbdbf3ab945        14 months ago       1.48GB</span><br><span class="line">hyperledger/fabric-couchdb     x86_64-1.0.0        2fbdbf3ab945        14 months ago       1.48GB</span><br><span class="line">hyperledger/fabric-kafka       latest              dbd3f94de4b5        14 months ago       1.3GB</span><br><span class="line">hyperledger/fabric-kafka       x86_64-1.0.0        dbd3f94de4b5        14 months ago       1.3GB</span><br><span class="line">hyperledger/fabric-zookeeper   latest              e545dbf1c6af        14 months ago       1.31GB</span><br><span class="line">hyperledger/fabric-zookeeper   x86_64-1.0.0        e545dbf1c6af        14 months ago       1.31GB</span><br><span class="line">hyperledger/fabric-orderer     latest              e317ca5638ba        14 months ago       179MB</span><br><span class="line">hyperledger/fabric-orderer     x86_64-1.0.0        e317ca5638ba        14 months ago       179MB</span><br><span class="line">hyperledger/fabric-peer        latest              6830dcd7b9b5        14 months ago       182MB</span><br><span class="line">hyperledger/fabric-peer        x86_64-1.0.0        6830dcd7b9b5        14 months ago       182MB</span><br><span class="line">hyperledger/fabric-javaenv     latest              8948126f0935        14 months ago       1.42GB</span><br><span class="line">hyperledger/fabric-javaenv     x86_64-1.0.0        8948126f0935        14 months ago       1.42GB</span><br><span class="line">hyperledger/fabric-ccenv       latest              7182c260a5ca        14 months ago       1.29GB</span><br><span class="line">hyperledger/fabric-ccenv       x86_64-1.0.0        7182c260a5ca        14 months ago       1.29GB</span><br><span class="line">hyperledger/fabric-ca          latest              a15c59ecda5b        14 months ago       238MB</span><br><span class="line">hyperledger/fabric-ca          x86_64-1.0.0        a15c59ecda5b        14 months ago       238MB</span><br><span class="line">hyperledger/fabric-baseos      x86_64-0.3.1        4b0cab202084        16 months ago       157MB</span><br></pre></td></tr></table></figure><p>最后执行脚本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ./network_setup.sh up &lt;channel-ID&gt;</span><br></pre></td></tr></table></figure><p>如果没有<code>channel-ID</code>,默认为<code>mychannel</code>，执行命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ./network_setup.sh up mychannel</span><br></pre></td></tr></table></figure><p>我执行完这个命令失败了，出现以下结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">Error: Error endorsing chaincode: rpc error: code = Unknown desc = Error starting container: API error (404): &#123;&quot;message&quot;:&quot;network e2ecli_default not found&quot;&#125;</span><br><span class="line"></span><br><span class="line">Usage:</span><br><span class="line">  peer chaincode instantiate [flags]</span><br><span class="line"></span><br><span class="line">Flags:</span><br><span class="line">  -C, --channelID string   The channel on which this command should be executed (default &quot;testchainid&quot;)</span><br><span class="line">  -c, --ctor string        Constructor message for the chaincode in JSON format (default &quot;&#123;&#125;&quot;)</span><br><span class="line">  -E, --escc string        The name of the endorsement system chaincode to be used for this chaincode</span><br><span class="line">  -l, --lang string        Language the chaincode is written in (default &quot;golang&quot;)</span><br><span class="line">  -n, --name string        Name of the chaincode</span><br><span class="line">  -P, --policy string      The endorsement policy associated to this chaincode</span><br><span class="line">  -v, --version string     Version of the chaincode specified in install/instantiate/upgrade commands</span><br><span class="line">  -V, --vscc string        The name of the verification system chaincode to be used for this chaincode</span><br><span class="line"></span><br><span class="line">Global Flags:</span><br><span class="line">      --cafile string              Path to file containing PEM-encoded trusted certificate(s) for the ordering endpoint</span><br><span class="line">      --logging-level string       Default logging level and overrides, see core.yaml for full syntax</span><br><span class="line">  -o, --orderer string             Ordering service endpoint</span><br><span class="line">      --test.coverprofile string   Done (default &quot;coverage.cov&quot;)</span><br><span class="line">      --tls                        Use TLS when communicating with the orderer endpoint</span><br><span class="line"></span><br><span class="line">!!!!!!!!!!!!!!! Chaincode instantiation on PEER2 on channel &apos;mychannel&apos; failed !!!!!!!!!!!!!!!!</span><br><span class="line">================== ERROR !!! FAILED to execute End-2-End Scenario ==================</span><br></pre></td></tr></table></figure><p><code>ctrl+c</code>退出</p><p><strong>解决办法：</strong> 找到本地文件夹进入项目：<code>/fabric/examples/e2e_cli/base/peer-base.yaml</code>，打开 <code>peer-base.yaml</code>文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"># Copyright IBM Corp. All Rights Reserved.</span><br><span class="line">#</span><br><span class="line"># SPDX-License-Identifier: Apache-2.0</span><br><span class="line">#</span><br><span class="line"></span><br><span class="line">version: &apos;2&apos;</span><br><span class="line">services:</span><br><span class="line">  peer-base:</span><br><span class="line">    image: hyperledger/fabric-peer</span><br><span class="line">    environment:</span><br><span class="line">      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock</span><br><span class="line">      # the following setting starts chaincode containers on the same</span><br><span class="line">      # bridge network as the peers</span><br><span class="line">      # https://docs.docker.com/compose/networking/</span><br><span class="line">      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=e2ecli_default</span><br><span class="line">      #- CORE_LOGGING_LEVEL=ERROR</span><br><span class="line">      - CORE_LOGGING_LEVEL=DEBUG</span><br><span class="line">      - CORE_PEER_TLS_ENABLED=true</span><br><span class="line">      - CORE_PEER_GOSSIP_USELEADERELECTION=true</span><br><span class="line">      - CORE_PEER_GOSSIP_ORGLEADER=false</span><br><span class="line">      - CORE_PEER_PROFILE_ENABLED=true</span><br><span class="line">      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt</span><br><span class="line">      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key</span><br><span class="line">      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt</span><br><span class="line">    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer</span><br><span class="line">    command: peer node start</span><br></pre></td></tr></table></figure><p>其中将<code>- CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=e2ecli_default</code>改为<code>- CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=e2e_cli_default</code></p><p>然后执行命令（如果不执行这个，会出现新的问题）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 在e2e_cli目录下</span><br><span class="line">$ ./network_setup.sh down</span><br></pre></td></tr></table></figure><p>重新启动Docker（如果不重启，会出现新的问题）</p><p>再重新执行命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ./network_setup.sh up mychannel</span><br></pre></td></tr></table></figure><p>成功后输出</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">===================== Query on PEER3 on channel &apos;mychannel&apos; is successful =====================</span><br><span class="line"></span><br><span class="line">===================== All GOOD, End-2-End execution completed =====================</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> _____   _   _   ____            _____   ____    _____</span><br><span class="line">| ____| | \ | | |  _ \          | ____| |___ \  | ____|</span><br><span class="line">|  _|   |  \| | | | | |  _____  |  _|     __) | |  _|</span><br><span class="line">| |___  | |\  | | |_| | |_____| | |___   / __/  | |___</span><br><span class="line">|_____| |_| \_| |____/          |_____| |_____| |_____|</span><br></pre></td></tr></table></figure><p><code>ctrl+c</code>退出</p><h3 id="4、测试Fabric网络"><a href="#4、测试Fabric网络" class="headerlink" title="4、测试Fabric网络"></a>4、测试Fabric网络</h3><p>这里有官方提供的小例子，在官方例子中，channel名字是mychannel，链码的名字是mycc。<br>首先进入CLI，然后重新打开一个命令行窗口，输入： </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker exec -it cli bash</span><br></pre></td></tr></table></figure><p>然后运行以下命令可以查询a账户的余额： </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">peer chaincode query -C mychannel -n mycc -c &apos;&#123;&quot;Args&quot;:[&quot;query&quot;,&quot;a&quot;]&#125;&apos;</span><br></pre></td></tr></table></figure><p>输出</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">root@e484bcb8e6da:/opt/gopath/src/github.com/hyperledger/fabric/peer# peer chaincode query -C mychannel -n mycc -c &apos;&#123;&quot;Args&quot;:[&quot;query&quot;,&quot;a&quot;]&#125;&apos;</span><br><span class="line">2018-09-06 10:11:25.945 UTC [msp] GetLocalMSP -&gt; DEBU 001 Returning existing local MSP</span><br><span class="line">2018-09-06 10:11:25.945 UTC [msp] GetDefaultSigningIdentity -&gt; DEBU 002 Obtaining default signing identity</span><br><span class="line">2018-09-06 10:11:25.945 UTC [chaincodeCmd] checkChaincodeCmdParams -&gt; INFO 003 Using default escc</span><br><span class="line">2018-09-06 10:11:25.945 UTC [chaincodeCmd] checkChaincodeCmdParams -&gt; INFO 004 Using default vscc</span><br><span class="line">2018-09-06 10:11:25.945 UTC [msp/identity] Sign -&gt; DEBU 005 Sign: plaintext: 0A95070A6708031A0C08CDFAC3DC0510...6D7963631A0A0A0571756572790A0161 </span><br><span class="line">2018-09-06 10:11:25.946 UTC [msp/identity] Sign -&gt; DEBU 006 Sign: digest: A7714812CFA5315FB0649B429267ED7DDE45CD1C082A55D2C03A09F3ACF2DE72 </span><br><span class="line">Query Result: 90</span><br><span class="line">2018-09-06 10:11:25.963 UTC [main] main -&gt; INFO 007 Exiting.....</span><br><span class="line">root@e484bcb8e6da:/opt/gopath/src/github.com/hyperledger/fabric/peer#</span><br></pre></td></tr></table></figure><p><code>Query Result: 90</code> 结果余额90</p><p>下面可以进行转账<code>invoke</code>操作,a转给b 50：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">peer chaincode invoke -o orderer.example.com:7050 --tls true --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem -C mychannel -n mycc -c &apos;&#123;&quot;Args&quot;:[&quot;invoke&quot;,&quot;a&quot;,&quot;b&quot;,&quot;50&quot;]&#125;&apos;</span><br></pre></td></tr></table></figure><p>现在转账完毕， 我们试一试再查询一下a账户的余额，重复之前的查询指令，结果为： </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">root@e484bcb8e6da:/opt/gopath/src/github.com/hyperledger/fabric/peer# peer chaincode query -C mychannel -n mycc -c &apos;&#123;&quot;Args&quot;:[&quot;query&quot;,&quot;a&quot;]&#125;&apos;</span><br><span class="line">2018-09-06 10:14:42.158 UTC [msp] GetLocalMSP -&gt; DEBU 001 Returning existing local MSP</span><br><span class="line">2018-09-06 10:14:42.159 UTC [msp] GetDefaultSigningIdentity -&gt; DEBU 002 Obtaining default signing identity</span><br><span class="line">2018-09-06 10:14:42.159 UTC [chaincodeCmd] checkChaincodeCmdParams -&gt; INFO 003 Using default escc</span><br><span class="line">2018-09-06 10:14:42.160 UTC [chaincodeCmd] checkChaincodeCmdParams -&gt; INFO 004 Using default vscc</span><br><span class="line">2018-09-06 10:14:42.162 UTC [msp/identity] Sign -&gt; DEBU 005 Sign: plaintext: 0A94070A6608031A0B0892FCC3DC0510...6D7963631A0A0A0571756572790A0161 </span><br><span class="line">2018-09-06 10:14:42.162 UTC [msp/identity] Sign -&gt; DEBU 006 Sign: digest: C6521250C0ACBF25D2B862D61ADF60EEC64015A1362CB091E9C3D5DAC8C2AA43 </span><br><span class="line">Query Result: 40</span><br><span class="line">2018-09-06 10:14:42.183 UTC [main] main -&gt; INFO 007 Exiting.....</span><br><span class="line">root@e484bcb8e6da:/opt/gopath/src/github.com/hyperledger/fabric/peer#</span><br></pre></td></tr></table></figure><p><code>Query Result: 40</code> 结果剩余40了，正确。</p><p>最后，我们需要关闭Fabric，这里先使用exit命令退出cli容器。然后执行命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ./network_setup.sh down</span><br></pre></td></tr></table></figure><p>搭建并且测试结束！</p><hr><p><em>到此结束，一把辛酸泪，好记性不如烂笔头。</em></p>]]></content>
      
      
      <categories>
          
          <category> 区块链 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Fabric环境搭建 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Charts X轴放大时X轴下方的数据重复显示</title>
      <link href="/2018/08/24/X%E8%BD%B4%E6%94%BE%E5%A4%A7%E6%97%B6X%E8%BD%B4%E4%B8%8B%E6%96%B9%E7%9A%84%E6%95%B0%E6%8D%AE%E9%87%8D%E5%A4%8D%E6%98%BE%E7%A4%BA/"/>
      <url>/2018/08/24/X%E8%BD%B4%E6%94%BE%E5%A4%A7%E6%97%B6X%E8%BD%B4%E4%B8%8B%E6%96%B9%E7%9A%84%E6%95%B0%E6%8D%AE%E9%87%8D%E5%A4%8D%E6%98%BE%E7%A4%BA/</url>
      
        <content type="html"><![CDATA[<blockquote><p>有人说，这是一个平庸的时代，一个物质的时代，一个愚乐的时代，一个缺乏大师的时代，可是，我们不能把什么过错都推给时代。一个人左右不了时代，却可以左右自己的脸——它可以不漂亮，却不可以没内容；他可以很丑，却不可以没个性。&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;——徐怀谦《酷的脸》</p></blockquote><p>我在使用Charts时将X轴放大3.5倍后遇到一个问题，X轴数据重复显示，直接上图<img src="http://ou3g2kov0.bkt.clouddn.com/hexo/Charts/1535078729711.jpg" alt></p><p><strong>解决方法</strong>：设置X轴的时候，设置一个属性<code>xAxis.granularity = 1;</code> 就ok了。</p><hr><p><em>到此结束，一把辛酸泪，好记性不如烂笔头。</em></p>]]></content>
      
      
      <categories>
          
          <category> iOS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Charts图表 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>cell.detailTextLabel不显示</title>
      <link href="/2018/08/23/cell-detailTextLabel%E4%B8%8D%E6%98%BE%E7%A4%BA/"/>
      <url>/2018/08/23/cell-detailTextLabel%E4%B8%8D%E6%98%BE%E7%A4%BA/</url>
      
        <content type="html"><![CDATA[<blockquote><p>时光荏苒，声明短暂，别将时间浪费在争吵、道歉、伤心和责备上。用时间去爱吧，哪怕只有一瞬间，也不要辜负。&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;——马克吐温</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">static NSString *cellId = @&quot;home_cellId&quot;;</span><br><span class="line">UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:cellId];</span><br><span class="line">if (cell == nil) &#123;</span><br><span class="line">    cell = [[UITableViewCell alloc]initWithStyle:UITableViewCellStyleSubtitle reuseIdentifier:cellId];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>解决方法：<code>UITableViewCellStyleDefault</code> 替换为 <code>UITableViewCellStyleSubtitle</code></p><hr><p><em>到此结束，一把辛酸泪，好记性不如烂笔头。</em></p>]]></content>
      
      
      <categories>
          
          <category> iOS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> UITableViewCell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>iOS状态栏颜色</title>
      <link href="/2018/08/07/iOS%E7%8A%B6%E6%80%81%E6%A0%8F%E9%A2%9C%E8%89%B2/"/>
      <url>/2018/08/07/iOS%E7%8A%B6%E6%80%81%E6%A0%8F%E9%A2%9C%E8%89%B2/</url>
      
        <content type="html"><![CDATA[<blockquote><p>人这种卑鄙的东西，什么都会习惯的。&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;——《罪与罚》</p></blockquote><p>状态栏分为前后两部分：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1、前景部分：指的是显示电池、时间、wifi信号那部分；</span><br><span class="line">2、背景部分：指的是前景的背景部分；</span><br></pre></td></tr></table></figure><p>一般情况下说的状态栏颜色都是指前景部分。</p><a id="more"></a><h4 id="1、更改启动图上的状态栏颜色"><a href="#1、更改启动图上的状态栏颜色" class="headerlink" title="1、更改启动图上的状态栏颜色"></a>1、更改启动图上的状态栏颜色</h4><p><code>TARGETS</code> -&gt; <code>General</code> -&gt; <code>Deployment Info</code> -&gt; <code>Status Bar Style</code> </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">默认的黑色（UIStatusBarStyleDefault）</span><br><span class="line">白色（UIStatusBarStyleLightContent）</span><br></pre></td></tr></table></figure><p>下面的 <code>Hide status bar</code> 勾选后可以隐藏启动图的状态栏，视图中的还显示。</p><p>如果在<code>Info.plist</code>里面设置<code>Status bar style</code> 效果是一样的。</p><h4 id="2、统一设置app所有控制器view的状态栏颜色"><a href="#2、统一设置app所有控制器view的状态栏颜色" class="headerlink" title="2、统一设置app所有控制器view的状态栏颜色"></a>2、统一设置app所有控制器view的状态栏颜色</h4><p><code>View controller-based status bar appearance</code> 属性在<code>Info.plist</code>文件中，如果将该属性设为<code>YES</code>,则控制器对状态的设置优先级最高，可以在控制器中对状态栏颜色进行单独修改；如果设置为<code>NO</code>的话，则以启动图设置为准，即app内部所有控制器view上状态栏情景部分颜色和启动图上保持一致，但还可以通过<code>UIApplication</code>管理，iOS9 以后已经不建议使用<code>UIApplication</code>管理状态栏了。</p><h4 id="3、单独设置某个控制器的状态栏颜色"><a href="#3、单独设置某个控制器的状态栏颜色" class="headerlink" title="3、单独设置某个控制器的状态栏颜色"></a>3、单独设置某个控制器的状态栏颜色</h4><p>两种情况：1、该控制器带导航控制器； 2、该控制器不带导航控制器</p><p>不管哪种情况首先将<code>View controller-based status bar appearance</code>设为<code>YES</code></p><p><strong>（不带导航控制器）</strong></p><p>在该控制器内添加：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">- (UIStatusBarStyle)preferredStatusBarStyle</span><br><span class="line">&#123;</span><br><span class="line">return UIStatusBarStyleLightContent;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>（带导航控制器）</strong></p><p>在该控制器内添加：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">- (UIStatusBarStyle)preferredStatusBarStyle</span><br><span class="line">&#123;</span><br><span class="line">return UIStatusBarStyleLightContent;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>还不够，需要自定义navigationController，然后在里面重写方法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">- (UIViewController *)childViewControllerForStatusBarStyle </span><br><span class="line">&#123;</span><br><span class="line">return self.topViewController;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4、在控制器view中随时更改状态栏颜色"><a href="#4、在控制器view中随时更改状态栏颜色" class="headerlink" title="4、在控制器view中随时更改状态栏颜色"></a>4、在控制器view中随时更改状态栏颜色</h4><p>需要调用<code>setNeedsStatusBarAppearanceUpdate</code>方法，这个方法会通知系统调用当前控制器的<code>preferredStatusBarStyle</code>方法，然后在该方法里根据情况来返回不同状态就行了。</p><hr><p><em>到此结束，一把辛酸泪，好记性不如烂笔头。</em></p>]]></content>
      
      
      <categories>
          
          <category> iOS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 状态栏 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mac 常用命令</title>
      <link href="/2018/06/15/Mac-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
      <url>/2018/06/15/Mac-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<blockquote><p>1.查看/关闭隐藏文件</p></blockquote><p><code>shift+command+.</code></p>]]></content>
      
      
      <categories>
          
          <category> Mac </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mac命令 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>苹果开发者账号申请</title>
      <link href="/2018/05/14/%E8%8B%B9%E6%9E%9C%E5%BC%80%E5%8F%91%E8%80%85%E8%B4%A6%E5%8F%B7%E7%94%B3%E8%AF%B7/"/>
      <url>/2018/05/14/%E8%8B%B9%E6%9E%9C%E5%BC%80%E5%8F%91%E8%80%85%E8%B4%A6%E5%8F%B7%E7%94%B3%E8%AF%B7/</url>
      
        <content type="html"><![CDATA[<p>之前做项目，帮别人申请过一次，但是，后来需要再申请的时候，步骤都忘光了，虽然这种东西不经常申请，但还是记录一下申请全过程吧。这个是一边申请一边写的。</p><a id="more"></a><hr><h4 id="准备资料："><a href="#准备资料：" class="headerlink" title="准备资料："></a>准备资料：</h4><p>1、开发者账号 邮箱账号和密码（需要接收一条验证码）<br>2、一个没有绑定过其他AppleID的手机号（需要接收一条验证码）<br>3、公司名字，街道信息，城市，省/直辖市，邮编，公司电话（邓白氏）<br>4、法人姓名，电话，邮箱（邓白氏）<br>5、公司清晰的营业执照正本（或副本）照片（不要提供扫描件，直接原件照片），拍完照的营业执照，保证扫描左下方二维码可以扫到工商信息<br>6、公司公章刻字面的实体照片（拿着公章，把刻字那一面拍照）<br>7、企业类型<br>8、是否是独立企业（公司有无分公司或办事处，只需填有或无）<br>9、公司英文简称或英文商标（如果没有可以填无）<br>10、主营业务（一个最主要的业务）<br>11、员工人数（尽量精确，例10人，不要填区间）<br>12、苹果联系人（就是公司项目负责人）的姓名、性别、职务、电话（公司座机和联系人手机，座机和办公地址保持一致）<br>13、公司主页网站<br>14、公司税号（选填）</p><h4 id="开始申请："><a href="#开始申请：" class="headerlink" title="开始申请："></a>开始申请：</h4><p>开发者账号申请链接 <a href="https://developer.apple.com/programs/enroll/" target="_blank" rel="noopener">传送门</a></p><p>点击传送门来到了这个界面<br><img src="http://ou3g2kov0.bkt.clouddn.com/hexo/%E8%8B%B9%E6%9E%9C%E5%BC%80%E5%8F%91%E8%80%85%E8%B4%A6%E5%8F%B7%E7%94%B3%E8%AF%B7/%E5%BC%80%E5%8F%91%E8%80%85%E8%B4%A6%E5%8F%B7%E7%94%B3%E8%AF%B71.jpg" alt></p><p>到这里有AppleID就登录（略过中间几步），没有就去申请一个。申请好了之后首次登录出现下个界面<img src="http://ou3g2kov0.bkt.clouddn.com/hexo/%E8%8B%B9%E6%9E%9C%E5%BC%80%E5%8F%91%E8%80%85%E8%B4%A6%E5%8F%B7%E7%94%B3%E8%AF%B7/%E5%8D%8F%E8%AE%AE.jpg" alt><br>点击submit来到下图<img src="http://ou3g2kov0.bkt.clouddn.com/hexo/%E8%8B%B9%E6%9E%9C%E5%BC%80%E5%8F%91%E8%80%85%E8%B4%A6%E5%8F%B7%E7%94%B3%E8%AF%B7/%E9%AA%8C%E8%AF%81%E6%89%8B%E6%9C%BA%E5%8F%B7.jpg" alt>以前是没有这一步的，可能是因为苹果开发者协议更新了，需要先验证手机号，点击红框中的任何一个继续<img src="http://ou3g2kov0.bkt.clouddn.com/hexo/%E8%8B%B9%E6%9E%9C%E5%BC%80%E5%8F%91%E8%80%85%E8%B4%A6%E5%8F%B7%E7%94%B3%E8%AF%B7/%E9%AA%8C%E8%AF%81%E6%89%8B%E6%9C%BA%E5%8F%B72.jpg" alt>点击需要输入密保问题答案继续<img src="http://ou3g2kov0.bkt.clouddn.com/hexo/%E8%8B%B9%E6%9E%9C%E5%BC%80%E5%8F%91%E8%80%85%E8%B4%A6%E5%8F%B7%E7%94%B3%E8%AF%B7/%E9%AA%8C%E8%AF%81%E6%89%8B%E6%9C%BA%E5%8F%B73.jpg" alt> <img src="http://ou3g2kov0.bkt.clouddn.com/hexo/%E8%8B%B9%E6%9E%9C%E5%BC%80%E5%8F%91%E8%80%85%E8%B4%A6%E5%8F%B7%E7%94%B3%E8%AF%B7/%E9%AA%8C%E8%AF%81%E6%89%8B%E6%9C%BA%E5%8F%B74.jpg" alt> 然后去开发者中心登录刚申请的AppleID进入<img src="http://ou3g2kov0.bkt.clouddn.com/hexo/%E8%8B%B9%E6%9E%9C%E5%BC%80%E5%8F%91%E8%80%85%E8%B4%A6%E5%8F%B7%E7%94%B3%E8%AF%B7/%E9%87%8D%E6%96%B0%E7%99%BB%E5%BD%95.jpg" alt>重复之前的步骤，一直进到下面的界面<img src="http://ou3g2kov0.bkt.clouddn.com/hexo/%E8%8B%B9%E6%9E%9C%E5%BC%80%E5%8F%91%E8%80%85%E8%B4%A6%E5%8F%B7%E7%94%B3%E8%AF%B7/%E9%80%89%E6%8B%A9%E5%85%AC%E5%8F%B8.jpg" alt>根据个人需要选择相应的实体类型，界面的语言可以在之前绑定手机号的时候修改，我选的是简体中文，所以我的界面显示的都是汉语，先别急着继续，看下面有个<code>D-U-N-S</code>编号，点击后面的<code>立即确认</code>或<code>Check Now</code>进入<img src="http://ou3g2kov0.bkt.clouddn.com/hexo/%E8%8B%B9%E6%9E%9C%E5%BC%80%E5%8F%91%E8%80%85%E8%B4%A6%E5%8F%B7%E7%94%B3%E8%AF%B7/%E7%94%B3%E8%AF%B7%E9%82%93%E7%99%BD%E6%B0%8F%E7%BC%96%E7%A0%81.jpg" alt>法人实体名称需要填写公司的英文名称哈，提交完之后会提示未找到您的组织，然后再提交<img src="http://ou3g2kov0.bkt.clouddn.com/hexo/%E8%8B%B9%E6%9E%9C%E5%BC%80%E5%8F%91%E8%80%85%E8%B4%A6%E5%8F%B7%E7%94%B3%E8%AF%B7/%E7%94%B3%E8%AF%B7%E9%82%93%E7%99%BD%E6%B0%8F%E7%BC%96%E7%A0%812.jpg" alt>到这里光等着邮件吧，大概两到三天的时间吧，会收到邮件的，等待中…(5月14号提交的，5月16号收到的邮件，需要回复邮件，回复信息如下图)<img src="http://ou3g2kov0.bkt.clouddn.com/hexo/%E8%8B%B9%E6%9E%9C%E5%BC%80%E5%8F%91%E8%80%85%E8%B4%A6%E5%8F%B7%E7%94%B3%E8%AF%B7/%E9%82%93%E7%99%BD%E6%B0%8F%E5%9B%9E%E5%A4%8D%E9%82%AE%E4%BB%B6.jpeg" alt>邮件已经回复了，继续等…果然，邮件上说最晚5月21号完成，我在5月21下午4点多的时候收到了回复，并且还帮我纠正的一点错误<img src="http://ou3g2kov0.bkt.clouddn.com/hexo/%E8%8B%B9%E6%9E%9C%E5%BC%80%E5%8F%91%E8%80%85%E8%B4%A6%E5%8F%B7%E7%94%B3%E8%AF%B7/%E9%82%93%E7%99%BD%E6%B0%8F%E7%BC%96%E7%A0%81%E7%A1%AE%E8%AE%A4%E9%82%AE%E4%BB%B6.jpg" alt>然后我就认真的继续等待，说好的 1-2 个工作日会发到我的邮箱里，大概是因为某种神秘的力量导致了邮件发送过程中抛锚了，迟迟等待了四天还没收到回复，在5月25号，我终于忍不住回复了一封邮件，问了一下情况<img src="http://ou3g2kov0.bkt.clouddn.com/hexo/%E8%8B%B9%E6%9E%9C%E5%BC%80%E5%8F%91%E8%80%85%E8%B4%A6%E5%8F%B7%E7%94%B3%E8%AF%B7/%E6%B2%A1%E6%9C%89%E6%94%B6%E5%88%B0%E9%82%93%E7%99%BD%E6%B0%8F%E7%BC%96%E7%A0%81%E5%9B%9E%E5%A4%8D%E9%82%AE%E4%BB%B6.jpg" alt>半个小时后我就收到了回复，邓白氏码居然发过来了，赶紧重新登录开发者账号，继续未完成的大业  （图一）<img src="http://ou3g2kov0.bkt.clouddn.com/hexo/%E8%8B%B9%E6%9E%9C%E5%BC%80%E5%8F%91%E8%80%85%E8%B4%A6%E5%8F%B7%E7%94%B3%E8%AF%B7/%E7%94%B3%E8%AF%B7%E5%AE%8C%E9%82%93%E7%99%BD%E6%B0%8F%E7%BC%96%E7%A0%81%E5%90%8E.jpg" alt>（图二）<img src="http://ou3g2kov0.bkt.clouddn.com/hexo/%E8%8B%B9%E6%9E%9C%E5%BC%80%E5%8F%91%E8%80%85%E8%B4%A6%E5%8F%B7%E7%94%B3%E8%AF%B7/%E5%A1%AB%E5%86%99%E9%82%93%E7%99%BD%E6%B0%8F%E7%A0%81.jpg" alt>点击提交（submit）<img src="http://ou3g2kov0.bkt.clouddn.com/hexo/%E8%8B%B9%E6%9E%9C%E5%BC%80%E5%8F%91%E8%80%85%E8%B4%A6%E5%8F%B7%E7%94%B3%E8%AF%B7/%E6%88%90%E5%8A%9F.jpg" alt>成功！激不激动，惊不惊喜，意不意外！还没完，等待苹果那边回复电话确认，确认过眼神(这个梗来源于抖音)之后，大结局付款！剧终！</p><hr><p><em>到此结束，一把辛酸泪，好记性不如烂笔头。</em></p>]]></content>
      
      
      <categories>
          
          <category> iOS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 开发者账号 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>appStore上架问题集</title>
      <link href="/2018/05/04/appStore%E4%B8%8A%E6%9E%B6%E9%97%AE%E9%A2%98%E9%9B%86/"/>
      <url>/2018/05/04/appStore%E4%B8%8A%E6%9E%B6%E9%97%AE%E9%A2%98%E9%9B%86/</url>
      
        <content type="html"><![CDATA[<blockquote><p>不必太纠结于当下，也不必太忧虑未来，当你经历过一些事情的时候，眼前的风景已经和从前不一样了。&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;——村上村树《1Q84》</p></blockquote><p>app每次上架过程就是一部血泪史，各种被拒，没看审核文档，一步一步踩着坑过来，其中还是有很多值得注意的地方的，将各种问题及解决办法收集起来汇成一部宝典，伴随自己成长。</p><a id="more"></a><hr><blockquote><p>Guideline 2.1 - Information Needed</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">We have started the review of your app, but we are not able to continue because we need access to a video that demonstrates the location feature while your app is running on the background.</span><br><span class="line"></span><br><span class="line">Please ensure the video you provide shows a physical iOS device (not a simulator).</span><br><span class="line"></span><br><span class="line">Next Steps</span><br><span class="line"></span><br><span class="line">To help us proceed with the review of your app, please provide us with a link to a demo video in the App Review Information section of iTunes Connect and reply to this message in Resolution Center.</span><br><span class="line"></span><br><span class="line">To provide a link to a demo video:</span><br><span class="line"></span><br><span class="line">- Log in to iTunes Connect</span><br><span class="line">- Click on &quot;My Apps&quot;</span><br><span class="line">- Select your app</span><br><span class="line">- Click on the app version on the left side of the screen</span><br><span class="line">- Scroll down to &quot;App Review Information&quot;</span><br><span class="line">- Provide demo video access details in the &quot;Notes&quot; section</span><br><span class="line">- Once you&apos;ve completed all changes, click the &quot;Save&quot; button at the top of the Version Information page.</span><br><span class="line"></span><br><span class="line">If your iTunes Connect status shows as Metadata Rejected, we do not require a new binary to correct this issue. Please reply to this message in Resolution Center to confirm the availability of a valid demo video, and we will continue with the review.</span><br></pre></td></tr></table></figure><p>问题原因：App -&gt; TARGETS -&gt; Capabilities -&gt; Background Modes 中勾选了 <code>Location updates</code> </p><p>问题解决：</p><p>需要给苹果审核团队提供一个视频，我们App中是跑步需要这个功能，然后我就拿着两部手机出去跑了一圈，一个手机用来录视频，一个手机运行App，然后把视频放到了优酷视频上，给审核团队提供了一个视频链接；</p><p>在 iTunes Connect 我的App -&gt; 待审核或可供销售 -&gt; App描述中加上一个提示语 <code>持续运行GPS在后台可能会降低您的电池续航时间。</code>最后完美通过。</p><blockquote><p>Guideline 2.3.3 - Performance - Accurate Metadata</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">We noticed that your screenshots do not sufficiently reflect your app in use.</span><br><span class="line"></span><br><span class="line">Please see attached screenshots.</span><br><span class="line"></span><br><span class="line">Next Steps</span><br><span class="line"></span><br><span class="line">To resolve this issue, please revise your screenshots to ensure that they accurately reflect the app in use on the supported devices. For iPhone, you need a set of 5.5-inch display screenshots and for iPad, you need a set for 12.9-inch display. This set will be scaled appropriately down to other device sizes when viewed on the App Store in each territory.</span><br><span class="line"></span><br><span class="line">Note that 5.8-inch display assets for iPhone X are optional and don&apos;t scale down to other devices sizes. Screenshots that include iPhone X layout features like rounded corners or sensor housing should only be used for the 5.8-inch display. </span><br><span class="line"></span><br><span class="line">Resources</span><br><span class="line"></span><br><span class="line">For resources on creating great screenshots for the App Store, you may want to review the App Store Product Page information available on the Apple developer portal.</span><br><span class="line"></span><br><span class="line">Please ensure you have made any screenshot modifications using Media Manager. You should confirm your app looks and behaves identically in all languages and on all supported devices. Learn how to use Media Manager to add custom screenshots for each display size and localization.</span><br><span class="line"></span><br><span class="line">Since your App Store Connect status is Rejected, a new binary will be required. Make the desired metadata changes when you upload the new binary.</span><br><span class="line"></span><br><span class="line">NOTE: Please be sure to make any metadata changes to all app localizations by selecting each specific localization and making appropriate changes.</span><br></pre></td></tr></table></figure><p>问题原因：我们App Store上传的预览图是用iPhone X截屏的，本来应该是5.8英寸的，结果UI给做成了5.5英寸的，也就是说，尺寸是5.5英寸的，但预览图截屏是iPhone X的，不对应。</p><p>问题解决：<br>iPhone X截屏上传到5.8英寸的预览图中，iPhone Plus截屏上传到5.5英寸的预览图中，不能把iPhone X截屏处理成5.5英寸的。</p><blockquote><p>Guideline 2.3.6 - Performance - Accurate Metadata</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">The rating you have selected, 4+, is inconsistent with the content of your app. Since your app includes contests, sweepstakes, real money gambling, or real money betting, you must select &quot;Yes&quot; for Gambling and Contests in App Store Connect.</span><br><span class="line"></span><br><span class="line">Next Steps</span><br><span class="line"></span><br><span class="line">To resolve this issue, please update your Rating selections in App Store Connect.</span><br><span class="line"></span><br><span class="line">- Log in to App Store Connect</span><br><span class="line">- Click on &quot;My Apps&quot;</span><br><span class="line">- Select your app</span><br><span class="line">- Scroll down to select a Rating on the App Details page</span><br><span class="line">- Click the Edit button next to &quot;Rating&quot;</span><br><span class="line">- Select &quot;Yes&quot; for Gambling and Contests</span><br><span class="line">- Click &quot;Done&quot;</span><br><span class="line">- Once you&apos;ve completed all changes, click the &quot;Save&quot; button at the top of the App Version Information page.</span><br><span class="line"></span><br><span class="line">Note: Apps must be rated accordingly for the highest level of content that the user is able to access in the app.</span><br></pre></td></tr></table></figure><p>问题原因：项目中接入了抽奖</p><p>问题解决：在app分级中，“赌博与竞赛”选项选择是，此时年龄会自动设为17+岁。</p><blockquote><p>Guideline 2.4.1 - Performance - Hardware Compatibility</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">We noticed that your app did not run or display as expected when viewed on iPad running iOS 11.4. Please see attached screenshots for details. </span><br><span class="line"></span><br><span class="line">Next Steps</span><br><span class="line"></span><br><span class="line">To resolve this issue, please revise your app to ensure it runs as expected and displays properly at iPhone resolution on iPad. Even if your app was developed specifically for iPhone, users should still be able to use your app on iPad. </span><br><span class="line"></span><br><span class="line">Resources</span><br><span class="line"></span><br><span class="line">For information on iOS device screen sizes and resolutions, please review the iOS Human Interface Guidelines as well as Points versus Pixels in the View Programming Guide for iOS. </span><br><span class="line"></span><br><span class="line">You may also want to view Size Classes and Core Components and Default Class Sizes for Different Devices for more information about designing apps for multiple screen sizes</span><br></pre></td></tr></table></figure><p>问题原因：我们的登录页面在iPad上不能正常登录，因为没有登录按钮，上架前先用iPad运行一下，看看能不能正常登录，这种连登录都没通过的被拒，感觉好气呀，但还是要保持微笑。</p><p>问题解决：单独适配或底部放一个scrollViewview。</p><blockquote><p>Guideline 2.5.1 - Performance - Software Requirements</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Your app uses the &quot;prefs:root=&quot; non-public URL scheme, which is a private entity. The use of non-public APIs is not permitted on the App Store because it can lead to a poor user experience should these APIs change.</span><br><span class="line"></span><br><span class="line">Continuing to use or conceal non-public APIs in future submissions of this app may result in the termination of your Apple Developer account, as well as removal of all associated apps from the App Store.</span><br><span class="line"></span><br><span class="line">Next Steps</span><br><span class="line"></span><br><span class="line">To resolve this issue, please revise your app to provide the associated functionality using public APIs or remove the functionality using the &quot;prefs:root&quot; or &quot;App-Prefs:root&quot; URL scheme.</span><br><span class="line"></span><br><span class="line">If there are no alternatives for providing the functionality your app requires, you can file an enhancement request.</span><br></pre></td></tr></table></figure><p>问题原因：App跳转系统设置界面使用了[[UIApplication sharedApplication]openURL:[NSURL URLWithString:@”App-Prefs:root=LOCATION”] options:@{} completionHandler:nil]</p><p>解决：将上述代码换成[[UIApplication sharedApplication] openURL:[NSURL URLWithString:UIApplicationOpenSettingsURLString]]即可。</p><blockquote><p>Guideline 4.2.1 - Design - Minimum Functionality</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Your app uses the HealthKit APIs but does not indicate integration with the Health app in your app description and clearly identify the HealthKit and CareKit functionality in your app&apos;s user interface.</span><br><span class="line"></span><br><span class="line">Next Steps</span><br><span class="line"></span><br><span class="line">To resolve this issue, please revise your app description to specify that your app integrates with the Health app.</span><br><span class="line"></span><br><span class="line">To resolve this issue, please clearly identify the HealthKit functionality in app&apos;s user interface to avoid confusion.</span><br></pre></td></tr></table></figure><blockquote><p>Guideline 5.1.1 - Legal - Privacy - Data Collection and Storage</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Your app uses the HealthKit frameworks but does not include the required privacy policy.</span><br><span class="line"></span><br><span class="line">Next Steps</span><br><span class="line"></span><br><span class="line">To resolve this issue, please update your app metadata to include a privacy policy URL and ensure that the URL you provide directs the user to your privacy policy.</span><br></pre></td></tr></table></figure><p>问题原因：我们的app中使用到了 <strong>HealthKit</strong> ，读取用户的步数；</p><p>问题解决：</p><p>在app info.plist文件中加入两个key  </p><p>Privacy - Health Share Usage Description<br><strong>APPName</strong>需要您的同意才能访问您的健康，若不同意，则无法读取您的健康数据。  </p><p>Privacy - Motion Usage Description<br><strong>APPName</strong>需要您的同意才能访问您的运动与健康，若不同意，则无法使用您的健康与运动数据。</p><p>在 iTunes Connect 我的App -&gt; App信息 中有个<code>隐私政策网址(URL)</code> 这里面需要填写一个URL，就是和登录或注册界面的用户协议那个URL一样的；</p><p>在 iTunes Connect 我的App -&gt; 待审核或可供销售 -&gt; App描述中加上一个提示语<code>“appName“已接入HealthKit，可同步训练数据到”个人“步数，授权 Apple Health 可一键同步运动数据。</code></p><blockquote><p>Guideline 5.3.2 - Legal - Gaming, Gambling, and Lotteries</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Your app includes a contest or sweepstakes but it does not:</span><br><span class="line"></span><br><span class="line">- Include official rules for the sweepstake within the app, which is required.</span><br><span class="line">- Indicate that Apple is not involved in any way with the contest or sweepstakes.</span><br><span class="line">- Enforce an app age rating of 17+.</span><br><span class="line"></span><br><span class="line">Next Steps</span><br><span class="line"></span><br><span class="line">It is necessary to:</span><br><span class="line"></span><br><span class="line">- Include official rules of the contest or sweepstakes in the app</span><br><span class="line">- Include an explicit statement in the contest or sweepstakes rules specifying that Apple is not a sponsor.</span><br><span class="line">- Enforce an age rating of 17+.</span><br></pre></td></tr></table></figure><p>问题原因：App中有抽奖功能</p><p>问题解决：在抽奖规则和抽奖页面添加<code>*奖品与活动和设备生产商Apple Inc.公司无关</code>。然后在用户协议中添加<code>通过本软件参加的任何商业活动或者奖励活动，由本公司提供，均与Apple Inc.无关。</code></p><blockquote><p><em>持续更新…</em></p></blockquote><hr><p><em>到此结束，一把辛酸泪，好记性不如烂笔头。</em></p>]]></content>
      
      
      <categories>
          
          <category> iOS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> app Store上架 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基金易混概念知识总结</title>
      <link href="/2017/09/13/%E5%9F%BA%E9%87%91%E6%98%93%E6%B7%B7%E6%A6%82%E5%BF%B5%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/"/>
      <url>/2017/09/13/%E5%9F%BA%E9%87%91%E6%98%93%E6%B7%B7%E6%A6%82%E5%BF%B5%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<h3 id="第五章-基金职业道德"><a href="#第五章-基金职业道德" class="headerlink" title="第五章 基金职业道德"></a>第五章 基金职业道德</h3><p>1、道德与法律的区别</p><ul><li>表现形式不同；</li><li>内容结构不同；</li><li>调整范围不同；</li><li>调整手段不同。</li></ul><a id="more"></a><p>2、道德与法律的联系</p><ul><li>目的一致；</li><li>内容交叉；</li><li>功能互补，道德在调整范围上对法律有补充作用；</li><li>相互促进。</li></ul><p>3、职业道德的特征</p><ul><li>特殊性；</li><li>继承性；</li><li>规范性；</li><li>具体性。</li></ul><p>4、基金职业道德主要包括</p><ul><li>守法合规；<font color="red">（最为基础）</font>，调整的是基金从业人员与基金行业及基金监管的关系。</li><li>客户至上；调整基金从业人员和投资人之间的关系，基本要求：客户利益优先；公平对待客户。</li><li>诚实守信；<font color="red">（核心规范）</font></li><li>忠诚尽责；调整基金从业人员和其所在机构之间的关系，基本要求：廉洁公正；忠诚敬业。</li><li>专业审慎；调整基金从业人员和职业之间的关系。基本要求：持证上岗；持续学习；审慎开展职业活动。</li><li>保守秘密。<font color="red">（法定义务）</font>包括商业秘密；客户资料；内幕信息。</li></ul><p>5、基金职业道德教育</p><p>途径：</p><ul><li>岗前职业道德教育；</li><li>岗位职业道德教育；</li><li>基金业协会的自律；</li><li>树立基金职业道德典型；</li><li>社会各界持续监督。</li></ul><p>6、基金职业道德修养</p><p>方法：</p><ul><li>正确树立基金职业道德观念；</li><li>深刻领会基金职业道德规范；</li><li>积极参加基金职业道德实践。</li></ul><hr><h4 id="基金管理人"><a href="#基金管理人" class="headerlink" title="基金管理人"></a>基金管理人</h4><p><strong>1、主要职责：</strong></p><ul><li>募集基金，办理基金份额的发售和登记事宜；</li><li>办理基金备案手续；</li><li>对不同的基金财产分别管理、分别记账；</li><li>确定基金收益分配方案，及时向基金份额持有人分配收益；</li><li>进行基金会计核算并编制基金财务会计报告，编制中期和年度基金报告；</li><li>计算并公告基金资产净值，确定基金份额申购、赎回价格；</li><li>办理信息披露事项；</li><li>召集基金份额持有人大会；</li><li>保存基金财产管理业务活动的记录、账册、报表和其他相关资料；</li><li>以基金管理人名义，代表基金份额持有人利益行使诉讼权利或实施其他法律行为。</li></ul><h4 id="基金托管人"><a href="#基金托管人" class="headerlink" title="基金托管人"></a>基金托管人</h4><p><strong>1、主要职责：</strong></p><ul><li>安全保管基金财产；</li><li>开设资金账户和证券账户；</li><li>对不同基金财产分别设置账户；</li><li>根据管理人指令，及时办理清算、交割事宜；</li><li>召集基金份额持有人大会；</li><li>信息披露；</li><li>复核净值和申购价格；</li><li>监督管理人的基金投资运作；</li><li>资料保存；</li><li>对基金财务会计报告，中期和年度报告出具意见。</li></ul><h4 id="中国证监会"><a href="#中国证监会" class="headerlink" title="中国证监会"></a>中国证监会</h4><p>1、中国证监会对以下基金服务机构实行<font color="red">注册</font>管理</p><ul><li>基金销售机构；</li><li>基金份额登记机构；</li><li>基金估值核算机构；</li></ul><p>2、中国证监会对以下基金服务机构实行<font color="red">备案</font>管理</p><ul><li>基金投资顾问机构；</li><li>基金评价机构；</li><li>基金信息技术系统服务机构；</li></ul><h4 id="文件"><a href="#文件" class="headerlink" title="文件"></a>文件</h4><p>1、注册<font color="red">公募基金</font>需要提交下列文件:</p><ul><li>申请报告；</li><li>基金合同草案；</li><li>基金托管协议草案；</li><li>招募说明书草案；</li><li>律师事务所出具的法律意见书；</li><li>其他文件。</li></ul><p><em>证监会应在<font color="red">6个月</font>内进行审核</em></p><h4 id="时间"><a href="#时间" class="headerlink" title="时间"></a>时间</h4><p>1、公募基金</p><p>注册公募基金提交的文件，证监会应在<font color="red">6个月</font>内进行审核；</p><p>管理人应在份额发售<font color="red">3日</font>前公布招募说明书、基金合同和其他文件；</p><p>募集期限：<font color="red">6个月</font></p><p>基金募集期限届满，基金管理人<font color="red">10日</font>内聘请验资机构验资，自收到验资报告之日起<font color="red">10日</font>内，向证监会提交验资报告，证监会收到<font color="red">3日</font>内书面确认，管理人收到确认后，<font color="red">次日</font>发布生效公告，办理基金备案手续。</p><p>募集基金失败，基金管理人以固有财产承担债务和费用，在募集期满后<font color="red">30日</font>内返还款项，并加计银行同期存款利息。</p><p>2、私募基金</p><p>基金业协会应在材料齐备后的<font color="red">20个工作日</font>，通过网站公告其基本情况，为私募基金管理人办理登记手续。</p><p>发生重大事项的，应在<font color="red">10个工作日</font>内向基金业协会报告。</p><p>基金管理人每个会计年度结束后的<font color="red">4个月</font>内，向基金业协会报送年报和年度投资运作情况资料，保存不得少于<font color="red">10年</font>。</p><h4 id="披露"><a href="#披露" class="headerlink" title="披露"></a>披露</h4><p>1、基金信息披露</p><ul><li>基金招募说明书、基金合同、基金托管协议；</li><li>基金资产净值、基金份额净值；</li><li>基金份额申购、赎回价格；</li><li>资产组合季度报告、财务会计报告及中期和年度基金报告；</li><li>临时报告；</li><li>基金份额持有人大会决议；</li><li>重大人事变动；</li><li>诉讼或仲裁。</li></ul><p>2、基金信息披露的作用</p><ul><li>有利于投资者的价值判断；</li><li>有利于防止利益冲突和利益输送，改变投资者信息弱势地位，增加市场透明度；</li><li>有利于提高证券市场效率；</li><li>有效防止信息滥用。</li></ul><p>3、基金信息披露原则</p><p>披露内容方面：真实性（<font color="red">最根本、最重要</font>）、准确性、完整性、及时性、公平披露。</p><p>披露形式方面：规范性、易解性、易得性。</p><p>4、管理人的基金信息披露义务</p><ul><li>发售<font color="red">3日前</font>，招募说明书和基金合同摘要；</li><li>合同生效的<font color="red">次日</font>，合同生效公告（网站披露）；</li><li>开放式基金合同生效后每<font color="red">6个月</font>结束之日起<font color="red">45日</font>内，登载更新的招募说明书，公告前<font color="red">15日</font>提交证监会；</li><li>上市前<font color="red">3日</font>，上市公告书在指定报刊和管理人网站；</li><li>封闭式：<font color="red">每周</font>；开放式：<font color="red">开放申赎前每周，开放申赎后每日</font>；</li><li>年度：<font color="red">90日内</font>，半年度：<font color="red">60日内</font>，季度：<font color="red">15个工作日内</font>。披露后<font color="red">2工作日</font>递交证监会备案；</li><li>重大影响：<font color="red">2日内临时报告书</font>，有误导性影响，立即公开澄清；</li><li>召开持有人大会：提前<font color="red">30日</font>公告；</li><li>管理人职责终止后：基金财产需审计报告并报证监会备案。</li></ul><p>5、</p><h4 id="法律"><a href="#法律" class="headerlink" title="法律"></a>法律</h4><p>1、2014年12月15日，基金业协会颁布了《基金从业人员职业行为自律准则》，引导全体从业人员合乎职业道德规范。</p><hr><hr><p>合规</p><p>基金管理人</p><p>基金托管人</p><p>ETF</p><p>LOF</p><p>信息披露</p><p>总结</p><p>我国基金信息披露的规范性文件分为三类:基金信息披露内容与格式准则、基金信息 披露编报规则、基金信息披露 XBRL 模扳和相关标引规范。</p><p>根据《基金管理公司风险管理指引(试行)》,投资合规性风险管理主要措施包括: (1)建立有效的投资流程和投资授权制度。 (2)通过在交易系统中设置风险参数,对投资的合规风险进行自动控制,对于无法在交易 系统自动控制的投资合规限制,应通过加强手工监控、多人复核等措施予以控制。 (3)重点监控投资组合投资中是否存在内幕交易、利益输送和不公平对待不同投资者等行 为。 (4)对交易异常行为进行定义,并通过事后评估对基金经理、交易员和其他人员的交易行 为(包括交易价格、交易品种、交易对手、交易频度、交易时机等)进行监控,加强对异常 交易的跟踪、监测和分析。 (5)每日跟踪评估投资比例、投资范围等合规性指标执行情况,确保投资组合投资的合规 性指标符合法律法规和基金合同的规定。 (6)关注估值政策和估值方法隐含的风险,定期评估第三方估值服务机构的估值质量,对 于以摊余成本法估值的资产,应特别关注影子价格及两者的偏差带来的风险,进行情景压力 测式并及时制定风险管理情景应对方案。</p><p>中国证监会依法对基金管理公司提交的市场准入等行政许可事项进行审批,主要包括: 基金管理公司的设立审批、基金管理公司申请境内机构投资者资格审批、基金管理公司重大 事项变更审核、基金管理公司分支机构设立审核、基金管理公司股权处置监管等。</p><p>基金运作信息披露文件主要包括净值公告、季度报告、半年度报告、年度报告以及基 金上市交易公告书等。基金合同是募集期间的披露文件。</p><hr><p><em>到此结束，一把辛酸泪，好记性不如烂笔头。</em></p>]]></content>
      
      
      <categories>
          
          <category> 基金 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基金基础知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>iOS设置label的行间距+字间距+高度自适应</title>
      <link href="/2017/09/07/iOS%E8%AE%BE%E7%BD%AElabel%E7%9A%84%E8%A1%8C%E9%97%B4%E8%B7%9D-%E5%AD%97%E9%97%B4%E8%B7%9D-%E9%AB%98%E5%BA%A6%E8%87%AA%E9%80%82%E5%BA%94/"/>
      <url>/2017/09/07/iOS%E8%AE%BE%E7%BD%AElabel%E7%9A%84%E8%A1%8C%E9%97%B4%E8%B7%9D-%E5%AD%97%E9%97%B4%E8%B7%9D-%E9%AB%98%E5%BA%A6%E8%87%AA%E9%80%82%E5%BA%94/</url>
      
        <content type="html"><![CDATA[<blockquote><p>越有本事的人越没脾气。因为素质、修为、涵养、学识、能力和财力会综合一个人的品格。</p></blockquote><a id="more"></a><p>将这些方法写在UILabel的分类中，方便调用。</p><h5 id="1、设置行间距"><a href="#1、设置行间距" class="headerlink" title="1、设置行间距"></a>1、设置行间距</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">//设置行间距</span><br><span class="line">- (void)setLineSpace:(CGFloat)lineSpcae withString:(NSString *)str</span><br><span class="line">&#123;</span><br><span class="line">    if (lineSpcae &lt; 0.01 || !str) &#123;</span><br><span class="line">        return;</span><br><span class="line">    &#125;</span><br><span class="line">    NSMutableParagraphStyle *paragraphStyle = [[NSMutableParagraphStyle alloc]init];</span><br><span class="line">    paragraphStyle.lineSpacing = lineSpcae;//行间距 默认为0</span><br><span class="line">    paragraphStyle.lineBreakMode = NSLineBreakByWordWrapping;</span><br><span class="line">    paragraphStyle.hyphenationFactor = 1;//连字符，换行的时候同一个单词用连字符连接</span><br><span class="line">    NSDictionary *dic = @&#123;NSParagraphStyleAttributeName:paragraphStyle&#125;;</span><br><span class="line">    NSAttributedString *attributeStr = [[NSAttributedString alloc]initWithString:str attributes:dic];</span><br><span class="line">    self.attributedText = attributeStr;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="2、设置字间距"><a href="#2、设置字间距" class="headerlink" title="2、设置字间距"></a>2、设置字间距</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">//设置字间距</span><br><span class="line">- (void)setWordLineSpace:(CGFloat)wordSpace withString:(NSString *)str</span><br><span class="line">&#123;</span><br><span class="line">    if (wordSpace &lt; 0.01 || !str) &#123;</span><br><span class="line">        return;</span><br><span class="line">    &#125;</span><br><span class="line">    NSDictionary *dic = @&#123;NSKernAttributeName:@(wordSpace)&#125;;</span><br><span class="line">    NSAttributedString *attributeStr = [[NSAttributedString alloc]initWithString:str attributes:dic];</span><br><span class="line">    self.attributedText = attributeStr;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="3、计算带行间距的文字长度-自适应高度"><a href="#3、计算带行间距的文字长度-自适应高度" class="headerlink" title="3、计算带行间距的文字长度 自适应高度"></a>3、计算带行间距的文字长度 自适应高度</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">- (CGSize)sizeWithString:(NSString *)string withLineSpace:(CGFloat)lineSpace sizemake:(CGSize) withsize</span><br><span class="line">&#123;</span><br><span class="line">    if (!string) &#123;</span><br><span class="line">        return CGSizeZero;</span><br><span class="line">    &#125;</span><br><span class="line">    NSMutableParagraphStyle *paragraphStyle = [[NSMutableParagraphStyle alloc]init];</span><br><span class="line">    paragraphStyle.lineSpacing = lineSpace;</span><br><span class="line">    paragraphStyle.hyphenationFactor = 1.0;</span><br><span class="line">    NSDictionary *dic = @&#123;NSParagraphStyleAttributeName:paragraphStyle,NSFontAttributeName:self.font&#125;;</span><br><span class="line">    CGSize size = [string boundingRectWithSize:withsize options:NSStringDrawingTruncatesLastVisibleLine | NSStringDrawingUsesFontLeading | NSStringDrawingUsesLineFragmentOrigin attributes:dic context:nil].size;</span><br><span class="line">    return size;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> iOS项目问题集 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> UILabel </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基金基础知识总结</title>
      <link href="/2017/08/31/%E5%9F%BA%E9%87%91%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/"/>
      <url>/2017/08/31/%E5%9F%BA%E9%87%91%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<h6 id="1、基金职业道德教育的途径"><a href="#1、基金职业道德教育的途径" class="headerlink" title="1、基金职业道德教育的途径"></a>1、基金职业道德教育的途径</h6><pre><code>1、岗前职业道德教育2、岗位职业道德教育3、基金业协会的自律4、树立基金职业道德典型5、社会各界持续监督</code></pre><a id="more"></a><h6 id="2、合规文化要求公司内部建立"><a href="#2、合规文化要求公司内部建立" class="headerlink" title="2、合规文化要求公司内部建立"></a>2、合规文化要求公司内部建立</h6><pre><code>1、清晰的责任制2、清晰的问责制3、激励约束机制</code></pre><h6 id="3、保险资产管理公司的资产管理业务包括"><a href="#3、保险资产管理公司的资产管理业务包括" class="headerlink" title="3、保险资产管理公司的资产管理业务包括"></a>3、保险资产管理公司的资产管理业务包括</h6><pre><code>1、企业年金2、保险资产管理计划3、第三方保险资产管理计划4、投资联结保险账户管理</code></pre><h6 id="4、基金合同特别约定的事项包括"><a href="#4、基金合同特别约定的事项包括" class="headerlink" title="4、基金合同特别约定的事项包括"></a>4、基金合同特别约定的事项包括</h6><pre><code>1、基金当事人的权利义务2、基金持有人大会的召集、议事及表决的程序和规则3、基金合同终止的事由、程序及基金财产的清算方式</code></pre><h6 id="5、基金管理人进行合规培训的具体内容包括"><a href="#5、基金管理人进行合规培训的具体内容包括" class="headerlink" title="5、基金管理人进行合规培训的具体内容包括"></a>5、基金管理人进行合规培训的具体内容包括</h6><pre><code>1、与基金行业有关的法律法规2、公司内部的员工守则和各项业务的合规制度3、案例警示教育</code></pre><h6 id="6、基金的营销组合策略包括"><a href="#6、基金的营销组合策略包括" class="headerlink" title="6、基金的营销组合策略包括"></a>6、基金的营销组合策略包括</h6><pre><code>1、产品策略2、分销策略3、促销策略4、人员策略</code></pre><h6 id="7、衍生金融工具包括"><a href="#7、衍生金融工具包括" class="headerlink" title="7、衍生金融工具包括"></a>7、衍生金融工具包括</h6><pre><code>1、远期合约2、期货合约3、期权合约4、互换协议</code></pre><h6 id="8、政府基金监管较之基金行业自律、基金机构内控以及社会力量监督具有以下特征"><a href="#8、政府基金监管较之基金行业自律、基金机构内控以及社会力量监督具有以下特征" class="headerlink" title="8、政府基金监管较之基金行业自律、基金机构内控以及社会力量监督具有以下特征"></a>8、政府基金监管较之基金行业自律、基金机构内控以及社会力量监督具有以下特征</h6><pre><code>1、监管内容具有全面性2、监管对象具有广泛性3、监管时间具有连续性4、监管主体及其权限具有法定性5、监管活动具有强制性</code></pre><h6 id="9、基金管理人的合规审核程序包括"><a href="#9、基金管理人的合规审核程序包括" class="headerlink" title="9、基金管理人的合规审核程序包括"></a>9、基金管理人的合规审核程序包括</h6><pre><code>1、制定合规审核机制2、合规审核调查3、合规审核评价</code></pre><h6 id="10、职业道德的作用包括"><a href="#10、职业道德的作用包括" class="headerlink" title="10、职业道德的作用包括"></a>10、职业道德的作用包括</h6><pre><code>1、调整职业关系2、提升职业素质3、促进行业发展</code></pre><h6 id="11、基金与银行储蓄存款有着本质的不同，主要表现在"><a href="#11、基金与银行储蓄存款有着本质的不同，主要表现在" class="headerlink" title="11、基金与银行储蓄存款有着本质的不同，主要表现在"></a>11、基金与银行储蓄存款有着本质的不同，主要表现在</h6><pre><code>1、性质不同2、收益与风险特性不同3、信息披露程度不同</code></pre><h6 id="12、ETF的特点"><a href="#12、ETF的特点" class="headerlink" title="12、ETF的特点"></a>12、ETF的特点</h6><pre><code>1、被动操作的指数型基金2、独特的实物申购赎回机制3、一级市场与二级市场共存的交易制度</code></pre><p>####### 13、金融市场的构成要素包括</p><pre><code>1、市场参与者2、金融工具3、金融交易的组织方式</code></pre><h6 id="14、证券市场监管的原则包括"><a href="#14、证券市场监管的原则包括" class="headerlink" title="14、证券市场监管的原则包括"></a>14、证券市场监管的原则包括</h6><pre><code>1、依法监管原则2、保护投资者原则3、“三公”原则4、监督与自律相结合原则</code></pre><hr><p>1、安全垫放大倍数增加，基金的风险和收益的变化情况为 <strong>风险增加，收益增加</strong><br>2、忠诚尽责要求基金从业人员在工作中要做到 <strong>廉洁公正，忠诚敬业</strong><br>3、分开募集的分级基金，以 <strong>子代码</strong> 进行申购和赎回。<strong>母基金代码</strong> 不能申购和赎回。<br>4、分级基金的基础份额称为 <strong>母基金份额</strong> ，预期风险收益较低的子份额称为 <strong>A类份额</strong>，预期风险收益较高的子份额称为 <strong>B类份额</strong>。<br>5、基金管理人关于 ETF 基金份额参考净值的计算方式，一般需经 <strong>证券交易所</strong> 认可后公告。修改 ETF 基金份额参考净值的计算方式，也需经 <strong>证券交易所</strong> 认可后公告。<br>6、基金监管的高效监管原则首先要求基金监管机构具有 <strong>权威性</strong>。<br>7、货币市场基金、债券基金、混合基金、股票基金风险等级 <strong>由低到高</strong>。<br>8、保本基金起源于 <strong>美国</strong>。<br>9、保本基金的最大特点是其招募说明书中明确引入 <strong>保本保障机制</strong>。<br>10、1990年，<strong>加拿大多伦多</strong> 证券交易所推出了世界上第一只 ETF 指数参与份额（TIPs）。<br>11、证券投资基金在 <strong>美国</strong> 被称为 <strong>“共同基金”</strong>。在 <strong>英国和我国香港特别行政区</strong> 被称为 <strong>“单位信托基金”</strong>。在 <strong>欧洲</strong> 一些国家被称为 <strong>“集合投资基金”或“集合投资计划”</strong>。在 <strong>“日本和我国台湾地区”</strong> 被称为<strong>“证券投资信托基金”</strong>。<br>12、基金评价机构从事公开募集基金评价业务并以公开形式发布基金评价结果的，应当向 <strong>基金业协会</strong> 申请注册。<br>13、中国境内第一家较为规范的投资基金是 <strong>淄博基金</strong>。<br>14、基金交易应实行 <strong>集中交易</strong> 制，基金经理不得直接向交易员下达投资指令或者直接进行交易。<br>15、注册登记机构将确认后的申购、赎回数据信息下发至各代销机构，同时也将登记数据发送至 <strong>基金托管人</strong>。<br>16、证券业协会性质上是 <strong>自律性组织</strong>。<br>17、开放式基金的申购和赎回可以通过 <strong>基金管理人的直销中心</strong> 与 <strong>基金销售代理人的代销网点</strong> 进行。</p><hr><p>1、QDII基金的净值在估值日后 <strong>1~2个工作日</strong> 内披露。<br>2、基金托管人职责终止的，基金份额持有人大会应当在 <strong>6个月</strong> 内选任新基金托管人。<br>3、督察长应当 <strong>定期或不定期</strong> 向全体董事报送工作报告。<br>4、基金管理人监事会 <strong>每年</strong> 至少召开一次会议，监事会决议至少须经 <strong>1/2</strong> 以上监事投票通过。<br>5、南方保本基金的保本周期为 <strong>3</strong> 年。<br>6、基金募集失败时，基金管理人在募集期限届满后 <strong>30</strong> 日内返还投资者已缴纳的款项，并加计银行同期存款利息。<br>7、我国目前基金申购款，一般在 <strong>T+2</strong> 日到达基金的银行存款账户。赎回款一般于 <strong>T+3</strong> 日从基金的银行存款账户划出。<br>8、封闭式基金的报价单位为每份基金价格。基金的申报价格最小变动单位为 <strong>0.001元</strong> 人民币，基金单笔最大数量应低于 <strong>100万</strong> 份。<br>9、基金销售机构应监测客户现金收支或款项划转情况，对符合大额交易标准的，在该大额交易发生后 <strong>5个工作日</strong> 内，向中国反洗钱监测分析中心报告。在发现有可疑交易或者行为时，在其发生后 <strong>10个工作日</strong> 内，向中国反洗钱监测分析中心报告。<br>10、开放式基金连续发生巨额赎回时，已经接受的赎回申请可以延缓支付赎回款项，但延缓期限不得超过 <strong>20个工作日</strong>。<br>11、ETF在一级市场上，通常只有基金份额达到 <strong>30万份</strong> 以上的投资者在交易时间内可以随时进行申购和赎回的交易。<br>12、根据相关法规，基金年度报告应由 <strong>2/3以上</strong> 独立董事签字同意。<br>13、我国开放式基金首次募集的募集期限为自该基金份额发售之日起 <strong>3个月</strong> 内。<br>14、基金管理人应当自收到投资者的申购(认购)、赎回申请之 日起 <strong>3个工作日</strong> 内,对该申购(认购)、赎回申请的有效性进行确认。</p><hr><p>1、XBRL : 可扩展商业报告语言<br>2、QFII ：合格的境外机构投资者<br>3、LOF ：上市开放式基金<br>4、ETF ：交易型开放式指数基金</p><hr><p>公式1：折（溢）价率 = （二级市场价格-基金份额净值）/ 基金份额净值<em>100%<br>公式2：净申购金额 = 申购金额 / （1+申购费率）<br>公式3：申购费用 = 净申购金额 </em> 申购费率<br>公式4：申购份额 = 净申购金额 / 申购当日份额净值</p><hr><p>1、某投资人投资 1 万元认购基金,认购金额在募集期产生的利息为 3 元,其对应的认购率 为 1.2%,基金份额面值为 1 元,则其认购费用为( )元,认购份额为( )份。    </p><p>A、150.24,12520<br>B、118.58,9884.39<br>C、115,9586.33<br>D、118.58,9881.42</p><p><strong>答案：B</strong><br>解析:净申购金额=申购金额/(1+申购费率)=10000/(1+1.2%)=9881.42 元;申购费用= 净申购金额<em>申购费率=9881.42</em>1.2%=118.58 份;利率=3/10000=0.0003;申购当日基金份额 净值=1/(1+0.0003)=0.9997 元;申购份额=净申购金额/申购当日份额净值 =9881.42/0.9997=9884.39 元。</p><hr><p><em>到此结束，一把辛酸泪，好记性不如烂笔头。</em></p>]]></content>
      
      
      <categories>
          
          <category> 基金 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基金基础知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>iOS工具类，常用方法</title>
      <link href="/2017/08/25/iOS%E5%B7%A5%E5%85%B7%E7%B1%BB/"/>
      <url>/2017/08/25/iOS%E5%B7%A5%E5%85%B7%E7%B1%BB/</url>
      
        <content type="html"><![CDATA[<pre><code>自我成长与提升重在平常的总结和积累</code></pre><p>开场装了个小比，下面开始正题</p><a id="more"></a><h5 id="1、判断字符串是否为空"><a href="#1、判断字符串是否为空" class="headerlink" title="1、判断字符串是否为空"></a>1、判断字符串是否为空</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">+ (BOOL)isEmpty:(NSString *)str</span><br><span class="line">&#123;</span><br><span class="line">if (!str) &#123;</span><br><span class="line">    return YES;</span><br><span class="line">    &#125;else &#123;</span><br><span class="line">    //去空格</span><br><span class="line">    NSCharacterSet *set = [NSCharacterSet whitespaceAndNewlineCharacterSet];</span><br><span class="line">        NSString *trimedString = [str stringByTrimmingCharactersInSet:set];</span><br><span class="line">        if ([trimedString length] == 0) &#123;</span><br><span class="line">        return YES;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">        return NO;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="2、对象万能判空"><a href="#2、对象万能判空" class="headerlink" title="2、对象万能判空"></a>2、对象万能判空</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">+ (BOOL)isNull:(id)obj</span><br><span class="line">&#123;</span><br><span class="line">if ([obj isKindOfClass:[NSString class]]) &#123;</span><br><span class="line">    return obj == nil || [obj isEqual:[NSNull null]] || [obj isEqualToString:@&quot;&lt;null&gt;&quot;] || [self isEmpty:obj];</span><br><span class="line">    &#125;else &#123;</span><br><span class="line">    return obj == nil || [obj isEqual:[NSNull null]];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="3、判断是否是手机号"><a href="#3、判断是否是手机号" class="headerlink" title="3、判断是否是手机号"></a>3、判断是否是手机号</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">+ (BOOL)isPhoneNum:(NSString *)mobileNum</span><br><span class="line">&#123;</span><br><span class="line">    NSString *MOBILE = @&quot;^1(3[0-9]|4[57]|5[0-35-9]|8[0-9]|7[0678])\\d&#123;8&#125;$&quot;;</span><br><span class="line">    NSPredicate *regextestmobile = [NSPredicate predicateWithFormat:@&quot;SELF MATCHES %@&quot;, MOBILE];</span><br><span class="line">    return [regextestmobile evaluateWithObject:mobileNum];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="4、精确的判断身份证号码"><a href="#4、精确的判断身份证号码" class="headerlink" title="4、精确的判断身份证号码"></a>4、精确的判断身份证号码</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line">+ (BOOL)accurateVerifyIDCardNumber:(NSString *)value</span><br><span class="line">&#123;</span><br><span class="line">    value = [value stringByTrimmingCharactersInSet:[NSCharacterSet whitespaceAndNewlineCharacterSet]];</span><br><span class="line">    </span><br><span class="line">    int length =0;</span><br><span class="line">    if (!value) &#123;</span><br><span class="line">        return NO;</span><br><span class="line">    &#125;else &#123;</span><br><span class="line">        length = (int)value.length;</span><br><span class="line">        </span><br><span class="line">        if (length !=15 &amp;&amp; length !=18) &#123;</span><br><span class="line">            return NO;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    // 省份代码</span><br><span class="line">    NSArray *areasArray =@[@&quot;11&quot;,@&quot;12&quot;, @&quot;13&quot;,@&quot;14&quot;, @&quot;15&quot;,@&quot;21&quot;, @&quot;22&quot;,@&quot;23&quot;, @&quot;31&quot;,@&quot;32&quot;, @&quot;33&quot;,@&quot;34&quot;, @&quot;35&quot;,@&quot;36&quot;, @&quot;37&quot;,@&quot;41&quot;, @&quot;42&quot;,@&quot;43&quot;, @&quot;44&quot;,@&quot;45&quot;, @&quot;46&quot;,@&quot;50&quot;, @&quot;51&quot;,@&quot;52&quot;, @&quot;53&quot;,@&quot;54&quot;, @&quot;61&quot;,@&quot;62&quot;, @&quot;63&quot;,@&quot;64&quot;, @&quot;65&quot;,@&quot;71&quot;, @&quot;81&quot;,@&quot;82&quot;, @&quot;91&quot;];</span><br><span class="line">    </span><br><span class="line">    NSString *valueStart2 = [value substringToIndex:2];</span><br><span class="line">    BOOL areaFlag =NO;</span><br><span class="line">    for (NSString *areaCode in areasArray) &#123;</span><br><span class="line">        if ([areaCode isEqualToString:valueStart2]) &#123;</span><br><span class="line">            areaFlag =YES;</span><br><span class="line">            break;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    if (!areaFlag) &#123;</span><br><span class="line">        return false;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    NSRegularExpression *regularExpression;</span><br><span class="line">    NSUInteger numberofMatch;</span><br><span class="line">    </span><br><span class="line">    int year =0;</span><br><span class="line">    switch (length) &#123;</span><br><span class="line">        case 15:</span><br><span class="line">        year = [value substringWithRange:NSMakeRange(6,2)].intValue +1900;</span><br><span class="line">        </span><br><span class="line">        if (year %4 ==0 || (year %100 ==0 &amp;&amp; year %4 ==0)) &#123;</span><br><span class="line">            </span><br><span class="line">            regularExpression = [[NSRegularExpression alloc] initWithPattern:@&quot;^[1-9][0-9]&#123;5&#125;[0-9]&#123;2&#125;((01|03|05|07|08|10|12)(0[1-9]|[1-2][0-9]|3[0-1])|(04|06|09|11)(0[1-9]|[1-2][0-9]|30)|02(0[1-9]|[1-2][0-9]))[0-9]&#123;3&#125;$&quot;</span><br><span class="line">                                                                     options:NSRegularExpressionCaseInsensitive</span><br><span class="line">                                                                       error:nil];//测试出生日期的合法性</span><br><span class="line">        &#125;else &#123;</span><br><span class="line">            regularExpression = [[NSRegularExpression alloc]initWithPattern:@&quot;^[1-9][0-9]&#123;5&#125;[0-9]&#123;2&#125;((01|03|05|07|08|10|12)(0[1-9]|[1-2][0-9]|3[0-1])|(04|06|09|11)(0[1-9]|[1-2][0-9]|30)|02(0[1-9]|1[0-9]|2[0-8]))[0-9]&#123;3&#125;$&quot;</span><br><span class="line">                                                                    options:NSRegularExpressionCaseInsensitive</span><br><span class="line">                                                                      error:nil];//测试出生日期的合法性</span><br><span class="line">        &#125;</span><br><span class="line">        numberofMatch = [regularExpression numberOfMatchesInString:value</span><br><span class="line">                                                           options:NSMatchingReportProgress</span><br><span class="line">                                                             range:NSMakeRange(0, value.length)];</span><br><span class="line">        </span><br><span class="line">        if(numberofMatch &gt;0) &#123;</span><br><span class="line">            return YES;</span><br><span class="line">        &#125;else &#123;</span><br><span class="line">            return NO;</span><br><span class="line">        &#125;</span><br><span class="line">        case 18:</span><br><span class="line">        year = [value substringWithRange:NSMakeRange(6,4)].intValue;</span><br><span class="line">        if (year %4 ==0 || (year %100 ==0 &amp;&amp; year %4 ==0)) &#123;</span><br><span class="line">            </span><br><span class="line">            regularExpression = [[NSRegularExpression alloc] initWithPattern:@&quot;^[1-9][0-9]&#123;5&#125;19[0-9]&#123;2&#125;((01|03|05|07|08|10|12)(0[1-9]|[1-2][0-9]|3[0-1])|(04|06|09|11)(0[1-9]|[1-2][0-9]|30)|02(0[1-9]|[1-2][0-9]))[0-9]&#123;3&#125;[0-9Xx]$&quot;</span><br><span class="line">                                                                     options:NSRegularExpressionCaseInsensitive</span><br><span class="line">                                                                       error:nil];//测试出生日期的合法性</span><br><span class="line">        &#125;else &#123;</span><br><span class="line">            regularExpression = [[NSRegularExpression alloc] initWithPattern:@&quot;^[1-9][0-9]&#123;5&#125;19[0-9]&#123;2&#125;((01|03|05|07|08|10|12)(0[1-9]|[1-2][0-9]|3[0-1])|(04|06|09|11)(0[1-9]|[1-2][0-9]|30)|02(0[1-9]|1[0-9]|2[0-8]))[0-9]&#123;3&#125;[0-9Xx]$&quot;</span><br><span class="line">                                                                     options:NSRegularExpressionCaseInsensitive</span><br><span class="line">                                                                       error:nil];//测试出生日期的合法性</span><br><span class="line">        &#125;</span><br><span class="line">        numberofMatch = [regularExpression numberOfMatchesInString:value</span><br><span class="line">                                                           options:NSMatchingReportProgress</span><br><span class="line">                                                             range:NSMakeRange(0, value.length)];</span><br><span class="line">        </span><br><span class="line">        if(numberofMatch &gt;0) &#123;</span><br><span class="line">            int S = ([value substringWithRange:NSMakeRange(0,1)].intValue + [value substringWithRange:NSMakeRange(10,1)].intValue) *7 + ([value substringWithRange:NSMakeRange(1,1)].intValue + [value substringWithRange:NSMakeRange(11,1)].intValue) *9 + ([value substringWithRange:NSMakeRange(2,1)].intValue + [value substringWithRange:NSMakeRange(12,1)].intValue) *10 + ([value substringWithRange:NSMakeRange(3,1)].intValue + [value substringWithRange:NSMakeRange(13,1)].intValue) *5 + ([value substringWithRange:NSMakeRange(4,1)].intValue + [value substringWithRange:NSMakeRange(14,1)].intValue) *8 + ([value substringWithRange:NSMakeRange(5,1)].intValue + [value substringWithRange:NSMakeRange(15,1)].intValue) *4 + ([value substringWithRange:NSMakeRange(6,1)].intValue + [value substringWithRange:NSMakeRange(16,1)].intValue) *2 + [value substringWithRange:NSMakeRange(7,1)].intValue *1 + [value substringWithRange:NSMakeRange(8,1)].intValue *6 + [value substringWithRange:NSMakeRange(9,1)].intValue *3;</span><br><span class="line">            int Y = S %11;</span><br><span class="line">            NSString *M =@&quot;F&quot;;</span><br><span class="line">            NSString *JYM =@&quot;10X98765432&quot;;</span><br><span class="line">            M = [JYM substringWithRange:NSMakeRange(Y,1)];// 判断校验位</span><br><span class="line">            if ([M isEqualToString:[value substringWithRange:NSMakeRange(17,1)]]) &#123;</span><br><span class="line">                return YES;// 检测ID的校验位</span><br><span class="line">            &#125;else &#123;</span><br><span class="line">                return NO;</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">        &#125;else &#123;</span><br><span class="line">            return NO;</span><br><span class="line">        &#125;</span><br><span class="line">        default:</span><br><span class="line">        return NO;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="5、获取当前VC"><a href="#5、获取当前VC" class="headerlink" title="5、获取当前VC"></a>5、获取当前VC</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">+ (UIViewController *)getVisibleVcFrom:(UIViewController*)vc &#123;</span><br><span class="line">    if ([vc isKindOfClass:[UINavigationController class]]) &#123;</span><br><span class="line">        return [self getVisibleVcFrom:[((UINavigationController*) vc) visibleViewController]];</span><br><span class="line">    &#125;else if ([vc isKindOfClass:[UITabBarController class]])&#123;</span><br><span class="line">        return [self getVisibleVcFrom:[((UITabBarController*) vc) selectedViewController]];</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        if (vc.presentedViewController) &#123;</span><br><span class="line">            return [self getVisibleVcFrom:vc.presentedViewController];</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            return vc;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">+ (UIViewController *)getCurrentVC</span><br><span class="line">&#123;</span><br><span class="line">[self getVisibleVcFrom:(UIViewController *)appDelegate.window.rootViewController]];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="6、打电话"><a href="#6、打电话" class="headerlink" title="6、打电话"></a>6、打电话</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">+ (void)dialPhone:(NSString *)phoneNum</span><br><span class="line">&#123;</span><br><span class="line">NSURL *url = [NSURL URLWithString:[NSString stringWithFormat:@&quot;telprompt://%@&quot;,phoneNum]];</span><br><span class="line">    [[UIApplication sharedApplication] openURL:url];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p>时间相关的常用方法</p><h5 id="1、获取当前时间戳"><a href="#1、获取当前时间戳" class="headerlink" title="1、获取当前时间戳"></a>1、获取当前时间戳</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">+ (NSString *)getCurrentTimeStamp</span><br><span class="line">&#123;</span><br><span class="line">NSDate *dat = [NSDate dateWithTimeIntervalSinceNow:0];</span><br><span class="line">    NSTimeInterval interval = [dat timeIntervalSince1970];</span><br><span class="line">    NSString *timeStamp = [NSString stringWithFormat:@&quot;%0.f&quot;,interval];</span><br><span class="line">    return timeStamp;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="2、与当前时间比较：显示-昨天、今天、刚刚"><a href="#2、与当前时间比较：显示-昨天、今天、刚刚" class="headerlink" title="2、与当前时间比较：显示 昨天、今天、刚刚"></a>2、与当前时间比较：显示 昨天、今天、刚刚</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">+ (NSString *)dateFormat:(NSString *)dateString</span><br><span class="line">&#123;</span><br><span class="line">    @try &#123;</span><br><span class="line">        NSString *targetDateStr = [self timeStamp:dateString format:@&quot;yyyy年MM月dd日 HH:mm:ss&quot;];</span><br><span class="line">        NSDateFormatter *dateFormatter = [[NSDateFormatter alloc]init];</span><br><span class="line">        [dateFormatter setDateFormat:@&quot;yyyy年MM月dd日 HH:mm:ss&quot;];</span><br><span class="line">        NSDate *nowDate = [NSDate date];</span><br><span class="line">        </span><br><span class="line">        NSDate *targetDate = [dateFormatter dateFromString:targetDateStr];</span><br><span class="line">        //取当前时间和转换时间两个日期对象的时间间隔</span><br><span class="line">        NSTimeInterval time = [nowDate timeIntervalSinceDate:targetDate];</span><br><span class="line">        </span><br><span class="line">        NSString *resultStr = [[NSString alloc] init];</span><br><span class="line">        if (time &lt;= 60) &#123;//1分钟以内</span><br><span class="line">            resultStr = @&quot;刚刚&quot;;</span><br><span class="line">        &#125;else if (time &lt; 3600) &#123;//一个小时以内</span><br><span class="line">            resultStr = [NSString stringWithFormat:@&quot;%d分钟前&quot;,(int)time/60];</span><br><span class="line">        &#125;else if (time &lt;= 60*60*24) &#123;//在两天内</span><br><span class="line">            [dateFormatter setDateFormat:@&quot;yyyy年MM月dd日&quot;];</span><br><span class="line">            NSString *target_yMd = [dateFormatter stringFromDate:targetDate];</span><br><span class="line">            NSString *now_yMd = [dateFormatter stringFromDate:nowDate];</span><br><span class="line">            [dateFormatter setDateFormat:@&quot;HH:mm&quot;];</span><br><span class="line">            if ([target_yMd isEqualToString:now_yMd]) &#123;</span><br><span class="line">                //同一天</span><br><span class="line">                resultStr = [NSString stringWithFormat:@&quot;今天 %@&quot;,[dateFormatter stringFromDate:targetDate]];</span><br><span class="line">            &#125;else &#123;</span><br><span class="line">                //昨天</span><br><span class="line">                resultStr = [NSString stringWithFormat:@&quot;昨天 %@&quot;,[dateFormatter stringFromDate:targetDate]];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;else &#123;</span><br><span class="line">            [dateFormatter setDateFormat:@&quot;yyyy&quot;];</span><br><span class="line">            NSString *target_y = [dateFormatter stringFromDate:targetDate];</span><br><span class="line">            NSString *now_y = [dateFormatter stringFromDate:nowDate];</span><br><span class="line">            if ([target_y isEqualToString:now_y]) &#123;</span><br><span class="line">                //同一年</span><br><span class="line">                [dateFormatter setDateFormat:@&quot;MM月dd日&quot;];</span><br><span class="line">                resultStr = [dateFormatter stringFromDate:targetDate];</span><br><span class="line">            &#125;else &#123;</span><br><span class="line">                [dateFormatter setDateFormat:@&quot;yyyy年MM月dd日&quot;];</span><br><span class="line">                resultStr = [dateFormatter stringFromDate:targetDate];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        return resultStr;</span><br><span class="line">    &#125; @catch (NSException *exception) &#123;</span><br><span class="line">        return @&quot;&quot;;</span><br><span class="line">    &#125; @finally &#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="3、判断某个时间是否在一天中的某个时间段内"><a href="#3、判断某个时间是否在一天中的某个时间段内" class="headerlink" title="3、判断某个时间是否在一天中的某个时间段内"></a>3、判断某个时间是否在一天中的某个时间段内</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">+ (BOOL)isBetweenFromHour:(NSInteger)fromHour toHour:(NSInteger)toHour</span><br><span class="line">&#123;</span><br><span class="line">    NSDate *date8 = [self getCustomDateWithHour:fromHour];</span><br><span class="line">    NSDate *date23 = [self getCustomDateWithHour:toHour];</span><br><span class="line">    </span><br><span class="line">    NSDate *currentDate = [NSDate date];</span><br><span class="line">    </span><br><span class="line">    if ([currentDate compare:date8]==NSOrderedDescending &amp;&amp; [currentDate compare:date23]==NSOrderedAscending)</span><br><span class="line">    &#123;</span><br><span class="line">        NSLog(@&quot;该时间在 %d:00-%d:00 之间！&quot;, (int)fromHour, (int)toHour);</span><br><span class="line">        return YES;</span><br><span class="line">    &#125;</span><br><span class="line">    return NO;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"> //生成当天的某个点,如hour为“8”，就是上午8:00（本地时间）</span><br><span class="line">+ (NSDate *)getCustomDateWithHour:(NSInteger)hour</span><br><span class="line">&#123;</span><br><span class="line">    //获取当前时间</span><br><span class="line">    NSDate *currentDate = [NSDate date];</span><br><span class="line">    NSCalendar *currentCalendar = [[NSCalendar alloc] initWithCalendarIdentifier:NSCalendarIdentifierGregorian];</span><br><span class="line">    NSDateComponents *currentComps = [[NSDateComponents alloc] init];</span><br><span class="line">    </span><br><span class="line">    NSInteger unitFlags = NSCalendarUnitYear | NSCalendarUnitMonth | NSCalendarUnitDay | NSCalendarUnitWeekday | NSCalendarUnitHour | NSCalendarUnitMinute | NSCalendarUnitSecond;</span><br><span class="line">    </span><br><span class="line">    currentComps = [currentCalendar components:unitFlags fromDate:currentDate];</span><br><span class="line">    </span><br><span class="line">    //设置当天的某个点</span><br><span class="line">    NSDateComponents *resultComps = [[NSDateComponents alloc] init];</span><br><span class="line">    [resultComps setYear:[currentComps year]];</span><br><span class="line">    [resultComps setMonth:[currentComps month]];</span><br><span class="line">    [resultComps setDay:[currentComps day]];</span><br><span class="line">    [resultComps setHour:hour];</span><br><span class="line">    </span><br><span class="line">    NSCalendar *resultCalendar = [[NSCalendar alloc] initWithCalendarIdentifier:NSCalendarIdentifierGregorian];</span><br><span class="line">    return [resultCalendar dateFromComponents:resultComps];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="4、RAC实现的倒计时"><a href="#4、RAC实现的倒计时" class="headerlink" title="4、RAC实现的倒计时"></a>4、RAC实现的倒计时</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">+ (RACSignal *)timerCountdown:(int)times</span><br><span class="line">&#123;</span><br><span class="line">    RACSignal *timer = [RACSignal interval:1 onScheduler:[RACScheduler mainThreadScheduler]];</span><br><span class="line">    return [[[timer scanWithStart:@(times) reduce:^id(NSNumber *running, id _) &#123;</span><br><span class="line">        return @(running.intValue - 1);</span><br><span class="line">    &#125;]takeUntilBlock:^BOOL(NSNumber *x) &#123;</span><br><span class="line">        return x.intValue &lt; 0;</span><br><span class="line">    &#125;]takeUntil:self.rac_willDeallocSignal];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="5、RAC实现的正计时"><a href="#5、RAC实现的正计时" class="headerlink" title="5、RAC实现的正计时"></a>5、RAC实现的正计时</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">+ (RACSignal *)timerPositive:(int)times withStartTime:(NSTimeInterval)startTime</span><br><span class="line">&#123;</span><br><span class="line">    RACSignal *timer = [RACSignal interval:1 onScheduler:[RACScheduler mainThreadScheduler]];</span><br><span class="line">    return [[[timer scanWithStart:@(startTime) reduce:^id(NSNumber *running, id _) &#123;</span><br><span class="line">        return @(running.intValue + 1);</span><br><span class="line">    &#125;]takeUntilBlock:^BOOL(NSNumber *x) &#123;</span><br><span class="line">        return x.intValue &gt; times;</span><br><span class="line">    &#125;]takeUntil:self.rac_willDeallocSignal];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="6、RAC实现的每隔多长时间执行一次"><a href="#6、RAC实现的每隔多长时间执行一次" class="headerlink" title="6、RAC实现的每隔多长时间执行一次"></a>6、RAC实现的每隔多长时间执行一次</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">+ (RACSignal *)handleInterval:(int)time</span><br><span class="line">&#123;</span><br><span class="line">@WeakObj(self);</span><br><span class="line">    [[[[RACSignal interval:time onScheduler:[RACScheduler mainThreadScheduler]] takeUntilBlock:^BOOL(id x) &#123;</span><br><span class="line">        @StrongObj(self);</span><br><span class="line">        return 表达式;//为YES时停止</span><br><span class="line">    &#125;]takeUntil:self.rac_willDeallocSignal] subscribeNext:^(id x) &#123;</span><br><span class="line">        @StrongObj(self);</span><br><span class="line">        //你自己的操作（每隔time秒执行一次）</span><br><span class="line">    &#125;];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p><em>到此结束，一把辛酸泪，好记性不如烂笔头。</em></p>]]></content>
      
      
      <categories>
          
          <category> iOS项目问题集 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS工具类 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>iOS10权限访问适配</title>
      <link href="/2017/08/25/iOS10%E6%9D%83%E9%99%90%E8%AE%BF%E9%97%AE%E9%80%82%E9%85%8D/"/>
      <url>/2017/08/25/iOS10%E6%9D%83%E9%99%90%E8%AE%BF%E9%97%AE%E9%80%82%E9%85%8D/</url>
      
        <content type="html"><![CDATA[<p>iOS10访问权限适配<br>iOS10调用相机、访问通讯录、相册等都要在plist中加入权限访问描述，不然项目会直接crash。</p><a id="more"></a><p>iOS10常用权限许可设置</p><pre><code>相机权限： Privacy - Camera Usage Description  是否允许此App使用你的相机？相册权限： Privacy - Photo Library Usage Description 是否允许此App访问你的媒体资料库？通讯录权限： Privacy - Contacts Usage Description  是否允许此App访问你的通讯录？蓝牙权限：Privacy - Bluetooth Peripheral Usage Description 是否许允此App使用蓝牙？持续定位权限： Privacy - Location Always Usage Description 是否允许此App持续使用定位服务？定位权限：Privacy - Location When In Use Usage Description 是否允许此App使用定位服务？语音转文字权限：Privacy - Speech Recognition Usage Description 是否允许此App使用语音识别？日历权限：Privacy - Calendars Usage Description 是否允许此App使用日历？健康访问权限：Privacy - Health Share Usage Description 是否允许此App访问你的健康健康写入权限：Privacy - Health Update Usage Description 是否允许此App写入健康数据麦克风权限：Privacy - Microphone Usage Description 是否允许此App使用你的麦克风？运动与健身权限： Privacy - Motion Usage Description 是否允许此App访问您的运动与健身</code></pre><hr><p><em>到此结束，一把辛酸泪，好记性不如烂笔头。</em></p>]]></content>
      
      
      <categories>
          
          <category> iOS项目问题集 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS10 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>本地项目上传到github</title>
      <link href="/2017/08/25/%E6%9C%AC%E5%9C%B0%E9%A1%B9%E7%9B%AE%E4%B8%8A%E4%BC%A0%E5%88%B0github/"/>
      <url>/2017/08/25/%E6%9C%AC%E5%9C%B0%E9%A1%B9%E7%9B%AE%E4%B8%8A%E4%BC%A0%E5%88%B0github/</url>
      
        <content type="html"><![CDATA[<p>事情过程大概是这样发展的，我自己先写了个Demo，放在我本地，然后我为这个demo配了一篇博客，事后我想把本地这个项目放在github上托管，最后把这个过程记录下来，方便以后使用。</p><hr><a id="more"></a><p><strong>步骤1、</strong>首先在自己的 github 上新建一个仓库 repository，自己命名好即可<br><strong>步骤2、</strong>打开终端，进入本地项目目录<br><strong>步骤3、</strong>执行命令：<code>git init</code>。(该命令是在本地项目目录下初始化一个repository，成功后，会在本地项目目录下生成一个.git的隐藏文件)<br><strong>步骤4、</strong>执行命令：<code>git add .</code>。（命令后面有个点“.”，把本地项目目录下的所有文件加到本地暂存区中）<br><strong>步骤5、</strong>执行命令：<code>git commit -m &quot;随便写点提交注释&quot;</code>。(该命令会把本地暂存区中的文件提交到本地历史区，注意只有在本地历史区中的内容才能提交到github，执行该命令后，所有的文件都只是在本地，跟github还没有关系)<br><strong>步骤6、</strong>执行命令：<code>git remote add origin https://github.com/自己的github username/项目名.git</code>。（该命令是把本地历史区中的文件添加到github服务器的暂存区中，这一步是本地和远程服务器建立联系）<br><strong>步骤7、</strong>执行命令：<code>git pull origin master</code>。（每次提交之前要进行pull，这个命令可能不成功，提示fatal:refusing to merge unrelated histories,需要执行下面的命令：<code>git pull origin master --allow-unrelated-histories</code>）这一步之后可能会出现编辑界面，输入<code>:wq</code>回车退出编辑即可，到此为止本地项目目录中多了一个README.md文件，这个文件就是从github上pull下来的<br><strong>步骤8、</strong>执行命令：<code>git push -u origin master</code>。（这一步是真正向github提交，完事儿后本地和github上就同步了）</p><hr><p><em>到此结束，一把辛酸泪，好记性不如烂笔头。</em></p>]]></content>
      
      
      <categories>
          
          <category> github </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>iOS原生二维码扫码全屏预览(可设置扫描区域)</title>
      <link href="/2017/08/07/iOS%E4%BA%8C%E7%BB%B4%E7%A0%81%E6%89%AB%E7%A0%81%E5%85%A8%E5%B1%8F%E9%A2%84%E8%A7%88%E5%8F%AF%E8%AE%BE%E7%BD%AE%E6%89%AB%E6%8F%8F%E5%8C%BA%E5%9F%9F/"/>
      <url>/2017/08/07/iOS%E4%BA%8C%E7%BB%B4%E7%A0%81%E6%89%AB%E7%A0%81%E5%85%A8%E5%B1%8F%E9%A2%84%E8%A7%88%E5%8F%AF%E8%AE%BE%E7%BD%AE%E6%89%AB%E6%8F%8F%E5%8C%BA%E5%9F%9F/</url>
      
        <content type="html"><![CDATA[<p>项目有4个功能，扫码、手电筒、相册识别二维码、生成二维码。<br>为了方便几个功能都写一起了，下面分开实现，把我自己在项目中遇到的问题重点记录一下，代码demo中都有。</p><hr><a id="more"></a><p>先上效果图片<a href="https://github.com/swb0711swl/SWBCodeScanViewDemo" target="_blank" rel="noopener">项目传送门</a><img src="http://ou3g2kov0.bkt.clouddn.com/hexo/image/二维码扫描.jpg?imageView2/0/q/75|watermark/2/text/5LiH5oG255qE5bCP5b2s5b2s/font/5a6L5L2T/fontsize/300/fill/I0ZGRkZGRg==/dissolve/80/gravity/SouthEast/dx/10/dy/10|imageslim" alt></p><p>iOS10访问权限适配<br><code>iOS10调用相机、访问通讯录、相册等都要在plist中加入权限访问描述，不然项目会直接crash。</code></p><p>项目中用到的<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">相机权限： Privacy - Camera Usage Description 是否允许此App使用你的相机？</span><br><span class="line">相册权限： Privacy - Photo Library Usage Description 是否允许此App访问你的媒体资</span><br></pre></td></tr></table></figure></p><h5 id="1、扫码"><a href="#1、扫码" class="headerlink" title="1、扫码"></a>1、扫码</h5><p>头文件：<code>#import &lt;AVFoundation/AVFoundation.h&gt;</code><br>实现代理：<code>AVCaptureMetadataOutputObjectsDelegate</code></p><p>主要属性：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">@property (strong, nonatomic) AVCaptureDevice *myDevice;//创建相机</span><br><span class="line">@property (strong, nonatomic) AVCaptureDeviceInput *deviceInput;//输入流</span><br><span class="line">@property (strong, nonatomic) AVCaptureMetadataOutput *metadataOutput;//媒体输出流</span><br><span class="line">@property (strong, nonatomic) AVCaptureSession *session;//捕捉会话</span><br><span class="line">@property (strong, nonatomic) AVCaptureVideoPreviewLayer *previewLayer;//视觉预览层</span><br></pre></td></tr></table></figure></p><p>代码就不往上贴了，demo里都有，这里有两行代码着重记录一下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1.//设置扫描区域的大小 (这里要宽和高要颠倒一下，具体原因我特么也不清楚)  默认值（0，0，1，1）</span><br><span class="line">self.metadataOutput.rectOfInterest = CGRectMake((SCREEN_HEIGHT/2-64-CodeScanHeight/2)/SCREEN_HEIGHT, (SCREEN_WIDTH/2-CodeScanWidth/2)/SCREEN_WIDTH, CodeScanHeight/SCREEN_HEIGHT, CodeScanWidth/SCREEN_WIDTH);</span><br><span class="line">    </span><br><span class="line">2.//背景全屏预览</span><br><span class="line">self.previewLayer.frame = CGRectMake(0, 0, SCREEN_WIDTH, SCREEN_HEIGHT);</span><br></pre></td></tr></table></figure></p><p>中间那个扫描框搞的我也是醉醉的，刚开始直接设置的self.previewLayer.frame是扫描框的frame，但是背景就不能全屏预览了，所以还得使用rectOfInterest属性来限制扫描区域。</p><h5 id="2、打开手电筒"><a href="#2、打开手电筒" class="headerlink" title="2、打开手电筒"></a>2、打开手电筒</h5><p>直接贴代码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">- (void)openFlashLamp</span><br><span class="line">&#123;</span><br><span class="line">AVCaptureDevice *device = [AVCaptureDevice defaultDeviceWithMediaType:AVMediaTypeVideo];</span><br><span class="line">    if ([device hasTorch])//判断设备是否有摄像头，模拟器没有</span><br><span class="line">    &#123;</span><br><span class="line">    //锁定系统摄像头</span><br><span class="line">        [device lockForConfiguration:nil];</span><br><span class="line">        if (device.torchMode == AVCaptureTorchModeOff)</span><br><span class="line">        &#123;</span><br><span class="line">        [device setTorchMode:AVCaptureTorchModeOn];</span><br><span class="line">        &#125;else &#123;</span><br><span class="line">        [device setTorchMode:AVCaptureTorchModeOff];</span><br><span class="line">        &#125;</span><br><span class="line">        //解除锁定</span><br><span class="line">        [device unlockForConfiguration];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h5 id="3、识别相册二维码"><a href="#3、识别相册二维码" class="headerlink" title="3、识别相册二维码"></a>3、识别相册二维码</h5><p>实现代理<code>UIImagePickerControllerDelegate,UINavigationControllerDelegate</code><br>1.打开相册<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">- (void)openPhotoLibrary</span><br><span class="line">&#123;</span><br><span class="line">UIImagePickerController *picker = [[UIImagePickerController alloc]init];</span><br><span class="line">    picker.sourceType = UIImagePickerControllerSourceTypePhotoLibrary;</span><br><span class="line">    picker.allowsEditing = YES;</span><br><span class="line">    picker.delegate = self;</span><br><span class="line">    [[self getCurrentVC] presentViewController:picker animated:YES completion:nil];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>2.实现代理<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">#pragma mark    UIImagePickerControllerDelegate</span><br><span class="line">- (void)imagePickerControllerDidCancel:(UIImagePickerController *)picker</span><br><span class="line">&#123;</span><br><span class="line">    [[self getCurrentVC] dismissViewControllerAnimated:YES completion:nil];</span><br><span class="line">&#125;</span><br><span class="line">- (void)imagePickerController:(UIImagePickerController *)picker didFinishPickingMediaWithInfo:(NSDictionary&lt;NSString *,id&gt; *)info</span><br><span class="line">&#123;</span><br><span class="line">    UIImage *img = info[UIImagePickerControllerEditedImage];</span><br><span class="line">    if (!img) &#123;</span><br><span class="line">        img = info[UIImagePickerControllerOriginalImage];</span><br><span class="line">    &#125;</span><br><span class="line">    @WeakObj(self);</span><br><span class="line">    [[self getCurrentVC] dismissViewControllerAnimated:YES completion:^&#123;</span><br><span class="line">        @StrongObj(self);</span><br><span class="line">        [self readQRcodeImg:img];</span><br><span class="line">    &#125;];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>3.识别相册二维码，读取二维码信息<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">- (void)readQRcodeImg:(UIImage *)img</span><br><span class="line">&#123;</span><br><span class="line">NSData *imgData = UIIamgeJPEGRepresentation(img, 1);</span><br><span class="line">    CIContext *context = [CIContext contextWithOptions:@&#123;kCIContextUseSoftwareRenderer:@(true),kCIContextPriorityRequestLow:@(false)&#125;];</span><br><span class="line">    CIDetector *detector = [CIDetector detectorOfType:CIDetectorTypeQRCode context:context options:nil];</span><br><span class="line">    CIImage *image = [CIImage imageWithData:imgData];</span><br><span class="line">    NSArray *arr = [detector featuresInImage:image];</span><br><span class="line">    if (arr.count &gt;= 1) &#123;</span><br><span class="line">    CIQRCodeFeature *feature = [arr firstObject];</span><br><span class="line">        //读取结果</span><br><span class="line">        if (self.delegateSubject) &#123;</span><br><span class="line">        [self.delegateSubject sendNext:feature.messageString];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;else &#123;</span><br><span class="line">        UIAlertController *alter = [UIAlertController alertControllerWithTitle:@&quot;扫描结果&quot; message:@&quot;不是二维码图片&quot; preferredStyle:UIAlertControllerStyleAlert];</span><br><span class="line">        UIAlertAction *cancleAction = [UIAlertAction actionWithTitle:@&quot;确定&quot; style:UIAlertActionStyleCancel handler:nil];</span><br><span class="line">        [alter addAction:cancleAction];</span><br><span class="line">        [[self getCurrentVC] presentViewController:alter animated:YES completion:nil];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h5 id="4、生成二维码"><a href="#4、生成二维码" class="headerlink" title="4、生成二维码"></a>4、生成二维码</h5><p>这个是用的一个别人写好的，挺不错的，可以自定义颜色和logo。一个方法调用就可生成，很方便。</p><hr><p><em>到此结束，一把辛酸泪，好记性不如烂笔头。</em></p>]]></content>
      
      
      <categories>
          
          <category> iOS项目问题集 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 二维码 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>iOS应用内跳转短信界面，导航栏无取消按钮的问题</title>
      <link href="/2017/08/01/%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%94%E7%94%A8%E5%86%85%E8%B7%B3%E8%BD%AC%E7%9F%AD%E4%BF%A1%E7%95%8C%E9%9D%A2/"/>
      <url>/2017/08/01/%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%94%E7%94%A8%E5%86%85%E8%B7%B3%E8%BD%AC%E7%9F%AD%E4%BF%A1%E7%95%8C%E9%9D%A2/</url>
      
        <content type="html"><![CDATA[<p><strong>应用内跳转短信</strong><br>头文件：<code>#import &lt;MessageUI/MessageUI.h&gt;</code><br>代理：<code>&lt;MFMessageComposeViewControllerDelegate&gt;</code></p><p>跳转代码实现<a id="more"></a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">//是否可以发送文本消息（模拟器不可以）</span><br><span class="line">    if ([MFMessageComposeViewController canSendText]) &#123;</span><br><span class="line">        MFMessageComposeViewController *vc = [[MFMessageComposeViewController alloc]init];</span><br><span class="line">        vc.recipients = @[phoneNum];//短信接收者---是个数组</span><br><span class="line">        vc.body = @&quot;&quot;;//短信内容</span><br><span class="line">        vc.messageComposeDelegate = self;</span><br><span class="line">//        vc.navigationBar.tintColor = color_FF9210;</span><br><span class="line">        [[GEToolUtil getCurrentVC] presentViewController:vc animated:YES completion:nil];</span><br><span class="line">    &#125;else &#123;</span><br><span class="line">        NSLog(@&quot;设备不支持发送短信&quot;);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p><p>代理方法实现<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">#pragma mark-   ======   MFMessageComposeViewControllerDelegate   =======</span><br><span class="line">- (void)messageComposeViewController:(MFMessageComposeViewController *)controller didFinishWithResult:(MessageComposeResult)result</span><br><span class="line">&#123;</span><br><span class="line">    //发送完信息就回到程序</span><br><span class="line">    [[GEToolUtil getCurrentVC] dismissViewControllerAnimated:YES completion:nil];</span><br><span class="line">    switch (result) &#123;</span><br><span class="line">        case MessageComposeResultSent:</span><br><span class="line">            [[HUDToolUtil singleton]showHUDMessage:@&quot;发送成功&quot;];</span><br><span class="line">            break;</span><br><span class="line">        case MessageComposeResultFailed:</span><br><span class="line">            [[HUDToolUtil singleton]showHUDMessage:@&quot;发送失败&quot;];</span><br><span class="line">            break;</span><br><span class="line">        case MessageComposeResultCancelled:</span><br><span class="line">            [[HUDToolUtil singleton]showHUDMessage:@&quot;取消发送&quot;];</span><br><span class="line">            break;</span><br><span class="line">            </span><br><span class="line">        default:</span><br><span class="line">            break;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>在 demo 中这样写，妥妥的可以，但是放到有些项目中短信界面的导航栏一片空白，没有取消按钮，无法返回自己的应用，出现这种情况看看自己的项目中是不是用了<code>UINavigationController+FDFullscreenPopGesture</code>这个第三方全屏滑动返回，如果用了的话进入这个类别.m文件添加一段代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">if ([self isKindOfClass:NSClassFromString(@&quot;MFMessageComposeViewController&quot;)]) &#123;</span><br><span class="line">        [self fd_pushViewController:viewController animated:animated];</span><br><span class="line">        return;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p><p>这段代码添加位置<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">- (void)fd_pushViewController:(UIViewController *)viewController animated:(BOOL)animated</span><br><span class="line">&#123;</span><br><span class="line">    if ([self isKindOfClass:NSClassFromString(@&quot;MFMessageComposeViewController&quot;)]) &#123;</span><br><span class="line">        [self fd_pushViewController:viewController animated:animated];</span><br><span class="line">        return;</span><br><span class="line">    &#125;</span><br><span class="line">    if (![self.interactivePopGestureRecognizer.view.gestureRecognizers containsObject:self.fd_fullscreenPopGestureRecognizer]) &#123;...此处省略很多行代码</span><br></pre></td></tr></table></figure></p><p><strong>到此结束</strong></p>]]></content>
      
      
      <categories>
          
          <category> iOS项目问题集 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 短信 </tag>
            
            <tag> 导航栏 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>初来乍到Hexo</title>
      <link href="/2017/06/21/%E5%88%9D%E6%9D%A5%E4%B9%8D%E5%88%B0/"/>
      <url>/2017/06/21/%E5%88%9D%E6%9D%A5%E4%B9%8D%E5%88%B0/</url>
      
        <content type="html"><![CDATA[<p>我叫司文彬，是一名多愁善感的程序猿，同事们都叫我司基猫，大概是由于我喜欢柯基并且还养了一只猫的缘故吧。50多公斤的小身板，却经常负荷许多忧虑和烦恼，又多半是自找的。<a id="more"></a>我不善于向自己敬爱的人表述敬与爱，却善于向所憎恶的人表达憎与恶，然而胆子并不大。我常常否定自己，否定自己既痛苦又快乐，我就生活在这痛苦与快乐的交织网里，总也冲不出去。</p>]]></content>
      
      
      <categories>
          
          <category> 自我介绍 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 自我介绍 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
